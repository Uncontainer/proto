<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd

		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	
	<import resource="classpath:spring-root-context.xml" />
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- <mvc:annotation-driven /> -->
	<import resource="spring-mvc-annotation-driven.xml" />
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
	<!-- 
	<mvc:resources mapping="/static/**" location="/static/" />
	 -->
	 
	<!-- Tiles Configuration -->
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<!-- 
		<property name="definitions" value="classpath:tiles2.xml" />
		 -->
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean>
	
	<bean id="tilesViewResolver" class="org.springbyexample.web.servlet.view.tiles2.TilesUrlBasedViewResolver">
		<property name="order" value="1" />
		<property name="viewClass" value="org.springbyexample.web.servlet.view.tiles2.DynamicTilesView" />
		<property name="prefix" value="/WEB-INF/ftl/" />
		<property name="suffix" value=".ftl" />
		<property name="tilesDefinitionName" value="default" />
		<property name="tilesBodyAttributeName" value="body" />
		<property name="tilesDefinitionDelimiter" value="." />
	</bean> 
	
	<!-- 
	<bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		 <property name="order" value="2"/>
		 <property name="prefix" value="/WEB-INF/jsp/"></property>
		 <property name="suffix" value=".jsp"></property>
	</bean>
	 -->
	 
	<mvc:interceptors>
		<bean class="com.yeon.infra.web.interceptor.ModelStaticAttributeInjectInterceptor"/>
	</mvc:interceptors>
	
	<!-- Multipart Resolver -->
	<!-- 
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10000000" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	 -->
	
	<!-- Imports user-defined @Controller beans that process client requests -->
	<!-- 
	<context:component-scan base-package="com.yeon.infra">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	-->
	
	<context:component-scan base-package="com.yeon">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<bean name="remoteServicePreparer" class="com.yeon.RemoteServicePreparer"/>
	
	<bean name="yeonContext" class="com.yeon.YeonContextFactoryBean" depends-on="remoteServicePreparer">
		<property name="adminAddress" value="http://127.0.0.1:10180" />
		<property name="solutionName" value="yeon" />
		<property name="projectName" value="infra-admin" />
	</bean>
</beans>
