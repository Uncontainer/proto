package com.naver.mage4j.model;

// Generated 2014. 7. 17 ���� 12:15:45 by Hibernate Tools 4.0.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * LogUrlId generated by hbm2java
 */
@Embeddable
public class LogUrlId implements java.io.Serializable {

	private long urlId;
	private Long visitorId;
	private Date visitTime;

	public LogUrlId() {
	}

	public LogUrlId(long urlId, Date visitTime) {
		this.urlId = urlId;
		this.visitTime = visitTime;
	}

	public LogUrlId(long urlId, Long visitorId, Date visitTime) {
		this.urlId = urlId;
		this.visitorId = visitorId;
		this.visitTime = visitTime;
	}

	@Column(name = "url_id", nullable = false)
	public long getUrlId() {
		return this.urlId;
	}

	public void setUrlId(long urlId) {
		this.urlId = urlId;
	}

	@Column(name = "visitor_id")
	public Long getVisitorId() {
		return this.visitorId;
	}

	public void setVisitorId(Long visitorId) {
		this.visitorId = visitorId;
	}

	@Column(name = "visit_time", nullable = false, length = 19)
	public Date getVisitTime() {
		return this.visitTime;
	}

	public void setVisitTime(Date visitTime) {
		this.visitTime = visitTime;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof LogUrlId))
			return false;
		LogUrlId castOther = (LogUrlId)other;

		return (this.getUrlId() == castOther.getUrlId())
			&& ((this.getVisitorId() == castOther.getVisitorId()) || (this.getVisitorId() != null && castOther.getVisitorId() != null && this.getVisitorId().equals(castOther.getVisitorId())))
			&& ((this.getVisitTime() == castOther.getVisitTime()) || (this.getVisitTime() != null && castOther.getVisitTime() != null && this.getVisitTime().equals(castOther.getVisitTime())));
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + (int)this.getUrlId();
		result = 37 * result + (getVisitorId() == null ? 0 : this.getVisitorId().hashCode());
		result = 37 * result + (getVisitTime() == null ? 0 : this.getVisitTime().hashCode());
		return result;
	}

}
