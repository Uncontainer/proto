package com.naver.mage4j.model;

// Generated 2014. 7. 17 ���� 12:15:45 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Tag generated by hbm2java
 */
@Entity
@Table(name = "tag"
	, catalog = "magento")
public class Tag implements java.io.Serializable {

	private Integer tagId;
	private CustomerEntity customerEntity;
	private CoreStore coreStore;
	private String name;
	private short status;
	private Set<TagProperties> tagPropertieses = new HashSet<TagProperties>(0);
	private Set<TagSummary> tagSummaries = new HashSet<TagSummary>(0);
	private Set<TagRelation> tagRelations = new HashSet<TagRelation>(0);

	public Tag() {
	}

	public Tag(short status) {
		this.status = status;
	}

	public Tag(CustomerEntity customerEntity, CoreStore coreStore, String name, short status, Set<TagProperties> tagPropertieses, Set<TagSummary> tagSummaries, Set<TagRelation> tagRelations) {
		this.customerEntity = customerEntity;
		this.coreStore = coreStore;
		this.name = name;
		this.status = status;
		this.tagPropertieses = tagPropertieses;
		this.tagSummaries = tagSummaries;
		this.tagRelations = tagRelations;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "tag_id", unique = true, nullable = false)
	public Integer getTagId() {
		return this.tagId;
	}

	public void setTagId(Integer tagId) {
		this.tagId = tagId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "first_customer_id")
	public CustomerEntity getCustomerEntity() {
		return this.customerEntity;
	}

	public void setCustomerEntity(CustomerEntity customerEntity) {
		this.customerEntity = customerEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "first_store_id")
	public CoreStore getCoreStore() {
		return this.coreStore;
	}

	public void setCoreStore(CoreStore coreStore) {
		this.coreStore = coreStore;
	}

	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "status", nullable = false)
	public short getStatus() {
		return this.status;
	}

	public void setStatus(short status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tag")
	public Set<TagProperties> getTagPropertieses() {
		return this.tagPropertieses;
	}

	public void setTagPropertieses(Set<TagProperties> tagPropertieses) {
		this.tagPropertieses = tagPropertieses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tag")
	public Set<TagSummary> getTagSummaries() {
		return this.tagSummaries;
	}

	public void setTagSummaries(Set<TagSummary> tagSummaries) {
		this.tagSummaries = tagSummaries;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tag")
	public Set<TagRelation> getTagRelations() {
		return this.tagRelations;
	}

	public void setTagRelations(Set<TagRelation> tagRelations) {
		this.tagRelations = tagRelations;
	}

}
