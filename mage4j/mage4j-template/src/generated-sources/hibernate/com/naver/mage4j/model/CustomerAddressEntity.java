package com.naver.mage4j.model;

// Generated 2014. 7. 17 ���� 12:15:45 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * CustomerAddressEntity generated by hbm2java
 */
@Entity
@Table(name = "customer_address_entity"
	, catalog = "magento")
public class CustomerAddressEntity implements java.io.Serializable {

	private Integer entityId;
	private CustomerEntity customerEntity;
	private short entityTypeId;
	private short attributeSetId;
	private String incrementId;
	private Date createdAt;
	private Date updatedAt;
	private short isActive;
	private Set<CustomerAddressEntityVarchar> customerAddressEntityVarchars = new HashSet<CustomerAddressEntityVarchar>(0);
	private Set<CustomerAddressEntityText> customerAddressEntityTexts = new HashSet<CustomerAddressEntityText>(0);
	private Set<CustomerAddressEntityInt> customerAddressEntityInts = new HashSet<CustomerAddressEntityInt>(0);
	private Set<CustomerAddressEntityDecimal> customerAddressEntityDecimals = new HashSet<CustomerAddressEntityDecimal>(0);
	private Set<CustomerAddressEntityDatetime> customerAddressEntityDatetimes = new HashSet<CustomerAddressEntityDatetime>(0);

	public CustomerAddressEntity() {
	}

	public CustomerAddressEntity(short entityTypeId, short attributeSetId, Date createdAt, Date updatedAt, short isActive) {
		this.entityTypeId = entityTypeId;
		this.attributeSetId = attributeSetId;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.isActive = isActive;
	}

	public CustomerAddressEntity(CustomerEntity customerEntity, short entityTypeId, short attributeSetId, String incrementId, Date createdAt, Date updatedAt, short isActive, Set<CustomerAddressEntityVarchar> customerAddressEntityVarchars, Set<CustomerAddressEntityText> customerAddressEntityTexts, Set<CustomerAddressEntityInt> customerAddressEntityInts, Set<CustomerAddressEntityDecimal> customerAddressEntityDecimals, Set<CustomerAddressEntityDatetime> customerAddressEntityDatetimes) {
		this.customerEntity = customerEntity;
		this.entityTypeId = entityTypeId;
		this.attributeSetId = attributeSetId;
		this.incrementId = incrementId;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.isActive = isActive;
		this.customerAddressEntityVarchars = customerAddressEntityVarchars;
		this.customerAddressEntityTexts = customerAddressEntityTexts;
		this.customerAddressEntityInts = customerAddressEntityInts;
		this.customerAddressEntityDecimals = customerAddressEntityDecimals;
		this.customerAddressEntityDatetimes = customerAddressEntityDatetimes;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "entity_id", unique = true, nullable = false)
	public Integer getEntityId() {
		return this.entityId;
	}

	public void setEntityId(Integer entityId) {
		this.entityId = entityId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parent_id")
	public CustomerEntity getCustomerEntity() {
		return this.customerEntity;
	}

	public void setCustomerEntity(CustomerEntity customerEntity) {
		this.customerEntity = customerEntity;
	}

	@Column(name = "entity_type_id", nullable = false)
	public short getEntityTypeId() {
		return this.entityTypeId;
	}

	public void setEntityTypeId(short entityTypeId) {
		this.entityTypeId = entityTypeId;
	}

	@Column(name = "attribute_set_id", nullable = false)
	public short getAttributeSetId() {
		return this.attributeSetId;
	}

	public void setAttributeSetId(short attributeSetId) {
		this.attributeSetId = attributeSetId;
	}

	@Column(name = "increment_id", length = 50)
	public String getIncrementId() {
		return this.incrementId;
	}

	public void setIncrementId(String incrementId) {
		this.incrementId = incrementId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Column(name = "is_active", nullable = false)
	public short getIsActive() {
		return this.isActive;
	}

	public void setIsActive(short isActive) {
		this.isActive = isActive;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customerAddressEntity")
	public Set<CustomerAddressEntityVarchar> getCustomerAddressEntityVarchars() {
		return this.customerAddressEntityVarchars;
	}

	public void setCustomerAddressEntityVarchars(Set<CustomerAddressEntityVarchar> customerAddressEntityVarchars) {
		this.customerAddressEntityVarchars = customerAddressEntityVarchars;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customerAddressEntity")
	public Set<CustomerAddressEntityText> getCustomerAddressEntityTexts() {
		return this.customerAddressEntityTexts;
	}

	public void setCustomerAddressEntityTexts(Set<CustomerAddressEntityText> customerAddressEntityTexts) {
		this.customerAddressEntityTexts = customerAddressEntityTexts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customerAddressEntity")
	public Set<CustomerAddressEntityInt> getCustomerAddressEntityInts() {
		return this.customerAddressEntityInts;
	}

	public void setCustomerAddressEntityInts(Set<CustomerAddressEntityInt> customerAddressEntityInts) {
		this.customerAddressEntityInts = customerAddressEntityInts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customerAddressEntity")
	public Set<CustomerAddressEntityDecimal> getCustomerAddressEntityDecimals() {
		return this.customerAddressEntityDecimals;
	}

	public void setCustomerAddressEntityDecimals(Set<CustomerAddressEntityDecimal> customerAddressEntityDecimals) {
		this.customerAddressEntityDecimals = customerAddressEntityDecimals;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customerAddressEntity")
	public Set<CustomerAddressEntityDatetime> getCustomerAddressEntityDatetimes() {
		return this.customerAddressEntityDatetimes;
	}

	public void setCustomerAddressEntityDatetimes(Set<CustomerAddressEntityDatetime> customerAddressEntityDatetimes) {
		this.customerAddressEntityDatetimes = customerAddressEntityDatetimes;
	}

}
