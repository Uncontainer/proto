package com.naver.mage4j.model;

// Generated 2014. 7. 17 ���� 12:15:45 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * AdminUser generated by hbm2java
 */
@Entity
@Table(name = "admin_user"
	, catalog = "magento"
	, uniqueConstraints = @UniqueConstraint(columnNames = "username"))
public class AdminUser implements java.io.Serializable {

	private Integer userId;
	private String firstname;
	private String lastname;
	private String email;
	private String username;
	private String password;
	private Date created;
	private Date modified;
	private Date logdate;
	private short lognum;
	private short reloadAclFlag;
	private short isActive;
	private String extra;
	private String rpToken;
	private Date rpTokenCreatedAt;
	private Set<OauthToken> oauthTokens = new HashSet<OauthToken>(0);
	private Set<Api2AclUser> api2AclUsers = new HashSet<Api2AclUser>(0);

	public AdminUser() {
	}

	public AdminUser(Date created, short lognum, short reloadAclFlag, short isActive) {
		this.created = created;
		this.lognum = lognum;
		this.reloadAclFlag = reloadAclFlag;
		this.isActive = isActive;
	}

	public AdminUser(String firstname, String lastname, String email, String username, String password, Date created, Date modified, Date logdate, short lognum, short reloadAclFlag, short isActive, String extra, String rpToken, Date rpTokenCreatedAt, Set<OauthToken> oauthTokens, Set<Api2AclUser> api2AclUsers) {
		this.firstname = firstname;
		this.lastname = lastname;
		this.email = email;
		this.username = username;
		this.password = password;
		this.created = created;
		this.modified = modified;
		this.logdate = logdate;
		this.lognum = lognum;
		this.reloadAclFlag = reloadAclFlag;
		this.isActive = isActive;
		this.extra = extra;
		this.rpToken = rpToken;
		this.rpTokenCreatedAt = rpTokenCreatedAt;
		this.oauthTokens = oauthTokens;
		this.api2AclUsers = api2AclUsers;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "user_id", unique = true, nullable = false)
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@Column(name = "firstname", length = 32)
	public String getFirstname() {
		return this.firstname;
	}

	public void setFirstname(String firstname) {
		this.firstname = firstname;
	}

	@Column(name = "lastname", length = 32)
	public String getLastname() {
		return this.lastname;
	}

	public void setLastname(String lastname) {
		this.lastname = lastname;
	}

	@Column(name = "email", length = 128)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "username", unique = true, length = 40)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", length = 100)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modified", length = 19)
	public Date getModified() {
		return this.modified;
	}

	public void setModified(Date modified) {
		this.modified = modified;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "logdate", length = 19)
	public Date getLogdate() {
		return this.logdate;
	}

	public void setLogdate(Date logdate) {
		this.logdate = logdate;
	}

	@Column(name = "lognum", nullable = false)
	public short getLognum() {
		return this.lognum;
	}

	public void setLognum(short lognum) {
		this.lognum = lognum;
	}

	@Column(name = "reload_acl_flag", nullable = false)
	public short getReloadAclFlag() {
		return this.reloadAclFlag;
	}

	public void setReloadAclFlag(short reloadAclFlag) {
		this.reloadAclFlag = reloadAclFlag;
	}

	@Column(name = "is_active", nullable = false)
	public short getIsActive() {
		return this.isActive;
	}

	public void setIsActive(short isActive) {
		this.isActive = isActive;
	}

	@Column(name = "extra", length = 65535)
	public String getExtra() {
		return this.extra;
	}

	public void setExtra(String extra) {
		this.extra = extra;
	}

	@Column(name = "rp_token", length = 65535)
	public String getRpToken() {
		return this.rpToken;
	}

	public void setRpToken(String rpToken) {
		this.rpToken = rpToken;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "rp_token_created_at", length = 19)
	public Date getRpTokenCreatedAt() {
		return this.rpTokenCreatedAt;
	}

	public void setRpTokenCreatedAt(Date rpTokenCreatedAt) {
		this.rpTokenCreatedAt = rpTokenCreatedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "adminUser")
	public Set<OauthToken> getOauthTokens() {
		return this.oauthTokens;
	}

	public void setOauthTokens(Set<OauthToken> oauthTokens) {
		this.oauthTokens = oauthTokens;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "adminUser")
	public Set<Api2AclUser> getApi2AclUsers() {
		return this.api2AclUsers;
	}

	public void setApi2AclUsers(Set<Api2AclUser> api2AclUsers) {
		this.api2AclUsers = api2AclUsers;
	}

}
