package com.naver.mage4j.model;

// Generated 2014. 7. 17 ���� 12:15:45 by Hibernate Tools 4.0.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SalesFlatInvoiceComment generated by hbm2java
 */
@Entity
@Table(name = "sales_flat_invoice_comment"
	, catalog = "magento")
public class SalesFlatInvoiceComment implements java.io.Serializable {

	private Integer entityId;
	private SalesFlatInvoice salesFlatInvoice;
	private Short isCustomerNotified;
	private short isVisibleOnFront;
	private String comment;
	private Date createdAt;

	public SalesFlatInvoiceComment() {
	}

	public SalesFlatInvoiceComment(SalesFlatInvoice salesFlatInvoice, short isVisibleOnFront) {
		this.salesFlatInvoice = salesFlatInvoice;
		this.isVisibleOnFront = isVisibleOnFront;
	}

	public SalesFlatInvoiceComment(SalesFlatInvoice salesFlatInvoice, Short isCustomerNotified, short isVisibleOnFront, String comment, Date createdAt) {
		this.salesFlatInvoice = salesFlatInvoice;
		this.isCustomerNotified = isCustomerNotified;
		this.isVisibleOnFront = isVisibleOnFront;
		this.comment = comment;
		this.createdAt = createdAt;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "entity_id", unique = true, nullable = false)
	public Integer getEntityId() {
		return this.entityId;
	}

	public void setEntityId(Integer entityId) {
		this.entityId = entityId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parent_id", nullable = false)
	public SalesFlatInvoice getSalesFlatInvoice() {
		return this.salesFlatInvoice;
	}

	public void setSalesFlatInvoice(SalesFlatInvoice salesFlatInvoice) {
		this.salesFlatInvoice = salesFlatInvoice;
	}

	@Column(name = "is_customer_notified")
	public Short getIsCustomerNotified() {
		return this.isCustomerNotified;
	}

	public void setIsCustomerNotified(Short isCustomerNotified) {
		this.isCustomerNotified = isCustomerNotified;
	}

	@Column(name = "is_visible_on_front", nullable = false)
	public short getIsVisibleOnFront() {
		return this.isVisibleOnFront;
	}

	public void setIsVisibleOnFront(short isVisibleOnFront) {
		this.isVisibleOnFront = isVisibleOnFront;
	}

	@Column(name = "comment", length = 65535)
	public String getComment() {
		return this.comment;
	}

	public void setComment(String comment) {
		this.comment = comment;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

}
