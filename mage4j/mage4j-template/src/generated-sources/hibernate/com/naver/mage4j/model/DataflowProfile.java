package com.naver.mage4j.model;

// Generated 2014. 7. 17 ���� 12:15:45 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * DataflowProfile generated by hbm2java
 */
@Entity
@Table(name = "dataflow_profile"
	, catalog = "magento")
public class DataflowProfile implements java.io.Serializable {

	private Integer profileId;
	private String name;
	private Date createdAt;
	private Date updatedAt;
	private String actionsXml;
	private String guiData;
	private String direction;
	private String entityType;
	private short storeId;
	private String dataTransfer;
	private Set<DataflowBatch> dataflowBatches = new HashSet<DataflowBatch>(0);
	private Set<DataflowProfileHistory> dataflowProfileHistories = new HashSet<DataflowProfileHistory>(0);

	public DataflowProfile() {
	}

	public DataflowProfile(short storeId) {
		this.storeId = storeId;
	}

	public DataflowProfile(String name, Date createdAt, Date updatedAt, String actionsXml, String guiData, String direction, String entityType, short storeId, String dataTransfer, Set<DataflowBatch> dataflowBatches, Set<DataflowProfileHistory> dataflowProfileHistories) {
		this.name = name;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.actionsXml = actionsXml;
		this.guiData = guiData;
		this.direction = direction;
		this.entityType = entityType;
		this.storeId = storeId;
		this.dataTransfer = dataTransfer;
		this.dataflowBatches = dataflowBatches;
		this.dataflowProfileHistories = dataflowProfileHistories;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "profile_id", unique = true, nullable = false)
	public Integer getProfileId() {
		return this.profileId;
	}

	public void setProfileId(Integer profileId) {
		this.profileId = profileId;
	}

	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Column(name = "actions_xml", length = 65535)
	public String getActionsXml() {
		return this.actionsXml;
	}

	public void setActionsXml(String actionsXml) {
		this.actionsXml = actionsXml;
	}

	@Column(name = "gui_data", length = 65535)
	public String getGuiData() {
		return this.guiData;
	}

	public void setGuiData(String guiData) {
		this.guiData = guiData;
	}

	@Column(name = "direction", length = 6)
	public String getDirection() {
		return this.direction;
	}

	public void setDirection(String direction) {
		this.direction = direction;
	}

	@Column(name = "entity_type", length = 64)
	public String getEntityType() {
		return this.entityType;
	}

	public void setEntityType(String entityType) {
		this.entityType = entityType;
	}

	@Column(name = "store_id", nullable = false)
	public short getStoreId() {
		return this.storeId;
	}

	public void setStoreId(short storeId) {
		this.storeId = storeId;
	}

	@Column(name = "data_transfer", length = 11)
	public String getDataTransfer() {
		return this.dataTransfer;
	}

	public void setDataTransfer(String dataTransfer) {
		this.dataTransfer = dataTransfer;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dataflowProfile")
	public Set<DataflowBatch> getDataflowBatches() {
		return this.dataflowBatches;
	}

	public void setDataflowBatches(Set<DataflowBatch> dataflowBatches) {
		this.dataflowBatches = dataflowBatches;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dataflowProfile")
	public Set<DataflowProfileHistory> getDataflowProfileHistories() {
		return this.dataflowProfileHistories;
	}

	public void setDataflowProfileHistories(Set<DataflowProfileHistory> dataflowProfileHistories) {
		this.dataflowProfileHistories = dataflowProfileHistories;
	}

}
