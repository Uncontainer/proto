package com.naver.mage4j.model;

// Generated 2014. 7. 17 ���� 12:15:45 by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * CatalogProductBundlePriceIndex generated by hbm2java
 */
@Entity
@Table(name = "catalog_product_bundle_price_index"
	, catalog = "magento")
public class CatalogProductBundlePriceIndex implements java.io.Serializable {

	private CatalogProductBundlePriceIndexId id;
	private CoreWebsite coreWebsite;
	private CatalogProductEntity catalogProductEntity;
	private CustomerGroup customerGroup;
	private BigDecimal minPrice;
	private BigDecimal maxPrice;

	public CatalogProductBundlePriceIndex() {
	}

	public CatalogProductBundlePriceIndex(CatalogProductBundlePriceIndexId id, CoreWebsite coreWebsite, CatalogProductEntity catalogProductEntity, CustomerGroup customerGroup, BigDecimal minPrice, BigDecimal maxPrice) {
		this.id = id;
		this.coreWebsite = coreWebsite;
		this.catalogProductEntity = catalogProductEntity;
		this.customerGroup = customerGroup;
		this.minPrice = minPrice;
		this.maxPrice = maxPrice;
	}

	@EmbeddedId
	@AttributeOverrides({
		@AttributeOverride(name = "entityId", column = @Column(name = "entity_id", nullable = false)),
		@AttributeOverride(name = "websiteId", column = @Column(name = "website_id", nullable = false)),
		@AttributeOverride(name = "customerGroupId", column = @Column(name = "customer_group_id", nullable = false))})
	public CatalogProductBundlePriceIndexId getId() {
		return this.id;
	}

	public void setId(CatalogProductBundlePriceIndexId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "website_id", nullable = false, insertable = false, updatable = false)
	public CoreWebsite getCoreWebsite() {
		return this.coreWebsite;
	}

	public void setCoreWebsite(CoreWebsite coreWebsite) {
		this.coreWebsite = coreWebsite;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "entity_id", nullable = false, insertable = false, updatable = false)
	public CatalogProductEntity getCatalogProductEntity() {
		return this.catalogProductEntity;
	}

	public void setCatalogProductEntity(CatalogProductEntity catalogProductEntity) {
		this.catalogProductEntity = catalogProductEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "customer_group_id", nullable = false, insertable = false, updatable = false)
	public CustomerGroup getCustomerGroup() {
		return this.customerGroup;
	}

	public void setCustomerGroup(CustomerGroup customerGroup) {
		this.customerGroup = customerGroup;
	}

	@Column(name = "min_price", nullable = false, precision = 12, scale = 4)
	public BigDecimal getMinPrice() {
		return this.minPrice;
	}

	public void setMinPrice(BigDecimal minPrice) {
		this.minPrice = minPrice;
	}

	@Column(name = "max_price", nullable = false, precision = 12, scale = 4)
	public BigDecimal getMaxPrice() {
		return this.maxPrice;
	}

	public void setMaxPrice(BigDecimal maxPrice) {
		this.maxPrice = maxPrice;
	}

}
