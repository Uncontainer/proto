package com.naver.mage4j.core.mage.core.model.resource.model;

// Generated 2014. 7. 17 ���� 12:15:45 by Hibernate Tools 4.0.0

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import com.naver.mage4j.core.mage.core.model.resource.store.Store;

/**
 * CatalogCompareItem generated by hbm2java
 */
@Entity
@Table(name = "catalog_compare_item"
	, catalog = "magento")
public class CatalogCompareItem implements java.io.Serializable {

	private Integer catalogCompareItemId;
	private CustomerEntity customerEntity;
	private Store coreStore;
	private CatalogProductEntity catalogProductEntity;
	private int visitorId;

	public CatalogCompareItem() {
	}

	public CatalogCompareItem(CatalogProductEntity catalogProductEntity, int visitorId) {
		this.catalogProductEntity = catalogProductEntity;
		this.visitorId = visitorId;
	}

	public CatalogCompareItem(CustomerEntity customerEntity, Store coreStore, CatalogProductEntity catalogProductEntity, int visitorId) {
		this.customerEntity = customerEntity;
		this.coreStore = coreStore;
		this.catalogProductEntity = catalogProductEntity;
		this.visitorId = visitorId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "catalog_compare_item_id", unique = true, nullable = false)
	public Integer getCatalogCompareItemId() {
		return this.catalogCompareItemId;
	}

	public void setCatalogCompareItemId(Integer catalogCompareItemId) {
		this.catalogCompareItemId = catalogCompareItemId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "customer_id")
	public CustomerEntity getCustomerEntity() {
		return this.customerEntity;
	}

	public void setCustomerEntity(CustomerEntity customerEntity) {
		this.customerEntity = customerEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "store_id")
	public Store getCoreStore() {
		return this.coreStore;
	}

	public void setCoreStore(Store coreStore) {
		this.coreStore = coreStore;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "product_id", nullable = false)
	public CatalogProductEntity getCatalogProductEntity() {
		return this.catalogProductEntity;
	}

	public void setCatalogProductEntity(CatalogProductEntity catalogProductEntity) {
		this.catalogProductEntity = catalogProductEntity;
	}

	@Column(name = "visitor_id", nullable = false)
	public int getVisitorId() {
		return this.visitorId;
	}

	public void setVisitorId(int visitorId) {
		this.visitorId = visitorId;
	}

}
