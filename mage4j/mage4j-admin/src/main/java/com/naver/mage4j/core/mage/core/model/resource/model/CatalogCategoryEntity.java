package com.naver.mage4j.core.mage.core.model.resource.model;

// Generated 2014. 7. 17 ���� 12:15:45 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.naver.mage4j.core.mage.core.model.resource.url.UrlRewrite;

/**
 * CatalogCategoryEntity generated by hbm2java
 */
@Entity
@Table(name = "catalog_category_entity"
	, catalog = "magento")
public class CatalogCategoryEntity implements java.io.Serializable {

	private Integer entityId;
	private short entityTypeId;
	private short attributeSetId;
	private int parentId;
	private Date createdAt;
	private Date updatedAt;
	private String path;
	private int position;
	private int level;
	private int childrenCount;
	private Set<UrlRewrite> coreUrlRewrites = new HashSet<UrlRewrite>(0);
	private Set<CatalogCategoryEntityVarchar> catalogCategoryEntityVarchars = new HashSet<CatalogCategoryEntityVarchar>(0);
	private Set<CatalogCategoryEntityInt> catalogCategoryEntityInts = new HashSet<CatalogCategoryEntityInt>(0);
	private Set<CatalogCategoryProduct> catalogCategoryProducts = new HashSet<CatalogCategoryProduct>(0);
	private Set<CatalogCategoryEntityText> catalogCategoryEntityTexts = new HashSet<CatalogCategoryEntityText>(0);
	private Set<CatalogCategoryEntityDatetime> catalogCategoryEntityDatetimes = new HashSet<CatalogCategoryEntityDatetime>(0);
	private Set<CatalogCategoryEntityDecimal> catalogCategoryEntityDecimals = new HashSet<CatalogCategoryEntityDecimal>(0);
	private Set<CatalogCategoryProductIndex> catalogCategoryProductIndexes = new HashSet<CatalogCategoryProductIndex>(0);

	public CatalogCategoryEntity() {
	}

	public CatalogCategoryEntity(short entityTypeId, short attributeSetId, int parentId, String path, int position, int level, int childrenCount) {
		this.entityTypeId = entityTypeId;
		this.attributeSetId = attributeSetId;
		this.parentId = parentId;
		this.path = path;
		this.position = position;
		this.level = level;
		this.childrenCount = childrenCount;
	}

	public CatalogCategoryEntity(short entityTypeId, short attributeSetId, int parentId, Date createdAt, Date updatedAt, String path, int position, int level, int childrenCount, Set<UrlRewrite> coreUrlRewrites, Set<CatalogCategoryEntityVarchar> catalogCategoryEntityVarchars, Set<CatalogCategoryEntityInt> catalogCategoryEntityInts, Set<CatalogCategoryProduct> catalogCategoryProducts, Set<CatalogCategoryEntityText> catalogCategoryEntityTexts,
		Set<CatalogCategoryEntityDatetime> catalogCategoryEntityDatetimes, Set<CatalogCategoryEntityDecimal> catalogCategoryEntityDecimals, Set<CatalogCategoryProductIndex> catalogCategoryProductIndexes) {
		this.entityTypeId = entityTypeId;
		this.attributeSetId = attributeSetId;
		this.parentId = parentId;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.path = path;
		this.position = position;
		this.level = level;
		this.childrenCount = childrenCount;
		this.coreUrlRewrites = coreUrlRewrites;
		this.catalogCategoryEntityVarchars = catalogCategoryEntityVarchars;
		this.catalogCategoryEntityInts = catalogCategoryEntityInts;
		this.catalogCategoryProducts = catalogCategoryProducts;
		this.catalogCategoryEntityTexts = catalogCategoryEntityTexts;
		this.catalogCategoryEntityDatetimes = catalogCategoryEntityDatetimes;
		this.catalogCategoryEntityDecimals = catalogCategoryEntityDecimals;
		this.catalogCategoryProductIndexes = catalogCategoryProductIndexes;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "entity_id", unique = true, nullable = false)
	public Integer getEntityId() {
		return this.entityId;
	}

	public void setEntityId(Integer entityId) {
		this.entityId = entityId;
	}

	@Column(name = "entity_type_id", nullable = false)
	public short getEntityTypeId() {
		return this.entityTypeId;
	}

	public void setEntityTypeId(short entityTypeId) {
		this.entityTypeId = entityTypeId;
	}

	@Column(name = "attribute_set_id", nullable = false)
	public short getAttributeSetId() {
		return this.attributeSetId;
	}

	public void setAttributeSetId(short attributeSetId) {
		this.attributeSetId = attributeSetId;
	}

	@Column(name = "parent_id", nullable = false)
	public int getParentId() {
		return this.parentId;
	}

	public void setParentId(int parentId) {
		this.parentId = parentId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Column(name = "path", nullable = false)
	public String getPath() {
		return this.path;
	}

	public void setPath(String path) {
		this.path = path;
	}

	@Column(name = "position", nullable = false)
	public int getPosition() {
		return this.position;
	}

	public void setPosition(int position) {
		this.position = position;
	}

	@Column(name = "level", nullable = false)
	public int getLevel() {
		return this.level;
	}

	public void setLevel(int level) {
		this.level = level;
	}

	@Column(name = "children_count", nullable = false)
	public int getChildrenCount() {
		return this.childrenCount;
	}

	public void setChildrenCount(int childrenCount) {
		this.childrenCount = childrenCount;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogCategoryEntity")
	public Set<UrlRewrite> getCoreUrlRewrites() {
		return this.coreUrlRewrites;
	}

	public void setCoreUrlRewrites(Set<UrlRewrite> coreUrlRewrites) {
		this.coreUrlRewrites = coreUrlRewrites;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogCategoryEntity")
	public Set<CatalogCategoryEntityVarchar> getCatalogCategoryEntityVarchars() {
		return this.catalogCategoryEntityVarchars;
	}

	public void setCatalogCategoryEntityVarchars(Set<CatalogCategoryEntityVarchar> catalogCategoryEntityVarchars) {
		this.catalogCategoryEntityVarchars = catalogCategoryEntityVarchars;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogCategoryEntity")
	public Set<CatalogCategoryEntityInt> getCatalogCategoryEntityInts() {
		return this.catalogCategoryEntityInts;
	}

	public void setCatalogCategoryEntityInts(Set<CatalogCategoryEntityInt> catalogCategoryEntityInts) {
		this.catalogCategoryEntityInts = catalogCategoryEntityInts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogCategoryEntity")
	public Set<CatalogCategoryProduct> getCatalogCategoryProducts() {
		return this.catalogCategoryProducts;
	}

	public void setCatalogCategoryProducts(Set<CatalogCategoryProduct> catalogCategoryProducts) {
		this.catalogCategoryProducts = catalogCategoryProducts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogCategoryEntity")
	public Set<CatalogCategoryEntityText> getCatalogCategoryEntityTexts() {
		return this.catalogCategoryEntityTexts;
	}

	public void setCatalogCategoryEntityTexts(Set<CatalogCategoryEntityText> catalogCategoryEntityTexts) {
		this.catalogCategoryEntityTexts = catalogCategoryEntityTexts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogCategoryEntity")
	public Set<CatalogCategoryEntityDatetime> getCatalogCategoryEntityDatetimes() {
		return this.catalogCategoryEntityDatetimes;
	}

	public void setCatalogCategoryEntityDatetimes(Set<CatalogCategoryEntityDatetime> catalogCategoryEntityDatetimes) {
		this.catalogCategoryEntityDatetimes = catalogCategoryEntityDatetimes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogCategoryEntity")
	public Set<CatalogCategoryEntityDecimal> getCatalogCategoryEntityDecimals() {
		return this.catalogCategoryEntityDecimals;
	}

	public void setCatalogCategoryEntityDecimals(Set<CatalogCategoryEntityDecimal> catalogCategoryEntityDecimals) {
		this.catalogCategoryEntityDecimals = catalogCategoryEntityDecimals;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogCategoryEntity")
	public Set<CatalogCategoryProductIndex> getCatalogCategoryProductIndexes() {
		return this.catalogCategoryProductIndexes;
	}

	public void setCatalogCategoryProductIndexes(Set<CatalogCategoryProductIndex> catalogCategoryProductIndexes) {
		this.catalogCategoryProductIndexes = catalogCategoryProductIndexes;
	}

}
