package com.naver.mage4j.core.mage.core.model.resource.website;

// Generated 2014. 7. 17 ���� 12:15:45 by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.*;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.naver.mage4j.core.mage.core.model.resource.model.CatalogProductBundlePriceIndex;
import com.naver.mage4j.core.mage.core.model.resource.model.CatalogProductBundleSelectionPrice;
import com.naver.mage4j.core.mage.core.model.resource.model.CatalogProductEntity;
import com.naver.mage4j.core.mage.core.model.resource.model.CatalogProductEntityGroupPrice;
import com.naver.mage4j.core.mage.core.model.resource.model.CatalogProductEntityTierPrice;
import com.naver.mage4j.core.mage.core.model.resource.model.CatalogProductIndexGroupPrice;
import com.naver.mage4j.core.mage.core.model.resource.model.CatalogProductIndexPrice;
import com.naver.mage4j.core.mage.core.model.resource.model.CatalogProductIndexTierPrice;
import com.naver.mage4j.core.mage.core.model.resource.model.CatalogProductIndexWebsite;
import com.naver.mage4j.core.mage.core.model.resource.model.CatalogProductSuperAttributePricing;
import com.naver.mage4j.core.mage.core.model.resource.model.CataloginventoryStockStatus;
import com.naver.mage4j.core.mage.core.model.resource.model.Catalogrule;
import com.naver.mage4j.core.mage.core.model.resource.model.CatalogruleGroupWebsite;
import com.naver.mage4j.core.mage.core.model.resource.model.CatalogruleProduct;
import com.naver.mage4j.core.mage.core.model.resource.model.CatalogruleProductPrice;
import com.naver.mage4j.core.mage.core.model.resource.model.CustomerEavAttributeWebsite;
import com.naver.mage4j.core.mage.core.model.resource.model.CustomerEntity;
import com.naver.mage4j.core.mage.core.model.resource.model.DownloadableLinkPrice;
import com.naver.mage4j.core.mage.core.model.resource.model.PaypalCert;
import com.naver.mage4j.core.mage.core.model.resource.model.PersistentSession;
import com.naver.mage4j.core.mage.core.model.resource.model.ProductAlertPrice;
import com.naver.mage4j.core.mage.core.model.resource.model.ProductAlertStock;
import com.naver.mage4j.core.mage.core.model.resource.model.Salesrule;
import com.naver.mage4j.core.mage.core.model.resource.model.SalesruleProductAttribute;
import com.naver.mage4j.core.mage.core.model.resource.model.WeeeDiscount;
import com.naver.mage4j.core.mage.core.model.resource.model.WeeeTax;
import com.naver.mage4j.core.mage.core.model.resource.store.Store;
import com.naver.mage4j.core.mage.core.model.resource.store.group.StoreGroup;

/**
 * CoreWebsite generated by hbm2java
 */
@Entity
@Table(name = "core_website"
	, catalog = "magento"
	, uniqueConstraints = @UniqueConstraint(columnNames = "code"))
public class Website implements java.io.Serializable {
	private Short websiteId;
	private String code;
	private String name;
	private short sortOrder;
	private short defaultGroupId;
	private Boolean isDefault;
	private Set<CustomerEavAttributeWebsite> customerEavAttributeWebsites = new HashSet<CustomerEavAttributeWebsite>(0);
	private Set<CatalogProductIndexPrice> catalogProductIndexPrices = new HashSet<CatalogProductIndexPrice>(0);
	private Set<Catalogrule> catalogrules = new HashSet<Catalogrule>(0);
	private Set<StoreGroup> coreStoreGroups = new HashSet<StoreGroup>(0);
	private Set<PersistentSession> persistentSessions = new HashSet<PersistentSession>(0);
	private Set<CatalogProductEntity> catalogProductEntities = new HashSet<CatalogProductEntity>(0);
	private CatalogProductIndexWebsite catalogProductIndexWebsite;
	private Set<DownloadableLinkPrice> downloadableLinkPrices = new HashSet<DownloadableLinkPrice>(0);
	private Set<CatalogruleProductPrice> catalogruleProductPrices = new HashSet<CatalogruleProductPrice>(0);
	private Set<PaypalCert> paypalCerts = new HashSet<PaypalCert>(0);
	private Set<CataloginventoryStockStatus> cataloginventoryStockStatuses = new HashSet<CataloginventoryStockStatus>(0);
	private Set<CatalogProductIndexTierPrice> catalogProductIndexTierPrices = new HashSet<CatalogProductIndexTierPrice>(0);
	private Set<CatalogruleGroupWebsite> catalogruleGroupWebsites = new HashSet<CatalogruleGroupWebsite>(0);
	private Set<CatalogProductEntityGroupPrice> catalogProductEntityGroupPrices = new HashSet<CatalogProductEntityGroupPrice>(0);
	private Set<CatalogProductBundlePriceIndex> catalogProductBundlePriceIndexes = new HashSet<CatalogProductBundlePriceIndex>(0);
	private Set<CatalogProductIndexGroupPrice> catalogProductIndexGroupPrices = new HashSet<CatalogProductIndexGroupPrice>(0);
	private Set<WeeeDiscount> weeeDiscounts = new HashSet<WeeeDiscount>(0);
	private Set<CatalogProductSuperAttributePricing> catalogProductSuperAttributePricings = new HashSet<CatalogProductSuperAttributePricing>(0);
	private Set<ProductAlertStock> productAlertStocks = new HashSet<ProductAlertStock>(0);
	private Set<CatalogProductEntityTierPrice> catalogProductEntityTierPrices = new HashSet<CatalogProductEntityTierPrice>(0);
	private Set<Salesrule> salesrules = new HashSet<Salesrule>(0);
	private Set<SalesruleProductAttribute> salesruleProductAttributes = new HashSet<SalesruleProductAttribute>(0);
	private Set<CatalogruleProduct> catalogruleProducts = new HashSet<CatalogruleProduct>(0);
	private Set<CustomerEntity> customerEntities = new HashSet<CustomerEntity>(0);
	private Set<Store> stores = new HashSet<Store>(0);
	private Set<WeeeTax> weeeTaxes = new HashSet<WeeeTax>(0);
	private Set<CatalogProductBundleSelectionPrice> catalogProductBundleSelectionPrices = new HashSet<CatalogProductBundleSelectionPrice>(0);
	private Set<ProductAlertPrice> productAlertPrices = new HashSet<ProductAlertPrice>(0);

	public Website() {
	}

	public Website(short sortOrder, short defaultGroupId) {
		this.sortOrder = sortOrder;
		this.defaultGroupId = defaultGroupId;
	}

	public Website(String code, String name, short sortOrder, short defaultGroupId, boolean isDefault, Set<CustomerEavAttributeWebsite> customerEavAttributeWebsites, Set<CatalogProductIndexPrice> catalogProductIndexPrices, Set<Catalogrule> catalogrules, Set<StoreGroup> coreStoreGroups, Set<PersistentSession> persistentSessions, Set<CatalogProductEntity> catalogProductEntities, CatalogProductIndexWebsite catalogProductIndexWebsite, Set<DownloadableLinkPrice> downloadableLinkPrices,
		Set<CatalogruleProductPrice> catalogruleProductPrices, Set<PaypalCert> paypalCerts, Set<CataloginventoryStockStatus> cataloginventoryStockStatuses, Set<CatalogProductIndexTierPrice> catalogProductIndexTierPrices, Set<CatalogruleGroupWebsite> catalogruleGroupWebsites, Set<CatalogProductEntityGroupPrice> catalogProductEntityGroupPrices, Set<CatalogProductBundlePriceIndex> catalogProductBundlePriceIndexes, Set<CatalogProductIndexGroupPrice> catalogProductIndexGroupPrices,
		Set<WeeeDiscount> weeeDiscounts, Set<CatalogProductSuperAttributePricing> catalogProductSuperAttributePricings, Set<ProductAlertStock> productAlertStocks, Set<CatalogProductEntityTierPrice> catalogProductEntityTierPrices, Set<Salesrule> salesrules, Set<SalesruleProductAttribute> salesruleProductAttributes, Set<CatalogruleProduct> catalogruleProducts, Set<CustomerEntity> customerEntities, Set<Store> coreStores, Set<WeeeTax> weeeTaxes,
		Set<CatalogProductBundleSelectionPrice> catalogProductBundleSelectionPrices, Set<ProductAlertPrice> productAlertPrices) {
		this.code = code;
		this.name = name;
		this.sortOrder = sortOrder;
		this.defaultGroupId = defaultGroupId;
		this.isDefault = isDefault;
		this.customerEavAttributeWebsites = customerEavAttributeWebsites;
		this.catalogProductIndexPrices = catalogProductIndexPrices;
		this.catalogrules = catalogrules;
		this.coreStoreGroups = coreStoreGroups;
		this.persistentSessions = persistentSessions;
		this.catalogProductEntities = catalogProductEntities;
		this.catalogProductIndexWebsite = catalogProductIndexWebsite;
		this.downloadableLinkPrices = downloadableLinkPrices;
		this.catalogruleProductPrices = catalogruleProductPrices;
		this.paypalCerts = paypalCerts;
		this.cataloginventoryStockStatuses = cataloginventoryStockStatuses;
		this.catalogProductIndexTierPrices = catalogProductIndexTierPrices;
		this.catalogruleGroupWebsites = catalogruleGroupWebsites;
		this.catalogProductEntityGroupPrices = catalogProductEntityGroupPrices;
		this.catalogProductBundlePriceIndexes = catalogProductBundlePriceIndexes;
		this.catalogProductIndexGroupPrices = catalogProductIndexGroupPrices;
		this.weeeDiscounts = weeeDiscounts;
		this.catalogProductSuperAttributePricings = catalogProductSuperAttributePricings;
		this.productAlertStocks = productAlertStocks;
		this.catalogProductEntityTierPrices = catalogProductEntityTierPrices;
		this.salesrules = salesrules;
		this.salesruleProductAttributes = salesruleProductAttributes;
		this.catalogruleProducts = catalogruleProducts;
		this.customerEntities = customerEntities;
		this.stores = coreStores;
		this.weeeTaxes = weeeTaxes;
		this.catalogProductBundleSelectionPrices = catalogProductBundleSelectionPrices;
		this.productAlertPrices = productAlertPrices;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "website_id", unique = true, nullable = false)
	public Short getWebsiteId() {
		return this.websiteId;
	}

	public void setWebsiteId(Short websiteId) {
		this.websiteId = websiteId;
	}

	@Column(name = "code", unique = true, length = 32)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "name", length = 64)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "sort_order", nullable = false)
	public short getSortOrder() {
		return this.sortOrder;
	}

	public void setSortOrder(short sortOrder) {
		this.sortOrder = sortOrder;
	}

	@Column(name = "default_group_id", nullable = false)
	public short getDefaultGroupId() {
		return this.defaultGroupId;
	}

	public void setDefaultGroupId(short defaultGroupId) {
		this.defaultGroupId = defaultGroupId;
	}

	@Column(name = "is_default")
	public Boolean getIsDefault() {
		return this.isDefault;
	}

	public void setIsDefault(Boolean isDefault) {
		this.isDefault = isDefault;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coreWebsite")
	public Set<CustomerEavAttributeWebsite> getCustomerEavAttributeWebsites() {
		return this.customerEavAttributeWebsites;
	}

	public void setCustomerEavAttributeWebsites(Set<CustomerEavAttributeWebsite> customerEavAttributeWebsites) {
		this.customerEavAttributeWebsites = customerEavAttributeWebsites;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coreWebsite")
	public Set<CatalogProductIndexPrice> getCatalogProductIndexPrices() {
		return this.catalogProductIndexPrices;
	}

	public void setCatalogProductIndexPrices(Set<CatalogProductIndexPrice> catalogProductIndexPrices) {
		this.catalogProductIndexPrices = catalogProductIndexPrices;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "coreWebsites")
	public Set<Catalogrule> getCatalogrules() {
		return this.catalogrules;
	}

	public void setCatalogrules(Set<Catalogrule> catalogrules) {
		this.catalogrules = catalogrules;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coreWebsite")
	public Set<StoreGroup> getCoreStoreGroups() {
		return this.coreStoreGroups;
	}

	public void setCoreStoreGroups(Set<StoreGroup> coreStoreGroups) {
		this.coreStoreGroups = coreStoreGroups;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coreWebsite")
	public Set<PersistentSession> getPersistentSessions() {
		return this.persistentSessions;
	}

	public void setPersistentSessions(Set<PersistentSession> persistentSessions) {
		this.persistentSessions = persistentSessions;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "catalog_product_website", catalog = "magento", joinColumns = {
		@JoinColumn(name = "website_id", nullable = false, updatable = false)}, inverseJoinColumns = {
		@JoinColumn(name = "product_id", nullable = false, updatable = false)})
	public Set<CatalogProductEntity> getCatalogProductEntities() {
		return this.catalogProductEntities;
	}

	public void setCatalogProductEntities(Set<CatalogProductEntity> catalogProductEntities) {
		this.catalogProductEntities = catalogProductEntities;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "coreWebsite")
	public CatalogProductIndexWebsite getCatalogProductIndexWebsite() {
		return this.catalogProductIndexWebsite;
	}

	public void setCatalogProductIndexWebsite(CatalogProductIndexWebsite catalogProductIndexWebsite) {
		this.catalogProductIndexWebsite = catalogProductIndexWebsite;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coreWebsite")
	public Set<DownloadableLinkPrice> getDownloadableLinkPrices() {
		return this.downloadableLinkPrices;
	}

	public void setDownloadableLinkPrices(Set<DownloadableLinkPrice> downloadableLinkPrices) {
		this.downloadableLinkPrices = downloadableLinkPrices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coreWebsite")
	public Set<CatalogruleProductPrice> getCatalogruleProductPrices() {
		return this.catalogruleProductPrices;
	}

	public void setCatalogruleProductPrices(Set<CatalogruleProductPrice> catalogruleProductPrices) {
		this.catalogruleProductPrices = catalogruleProductPrices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coreWebsite")
	public Set<PaypalCert> getPaypalCerts() {
		return this.paypalCerts;
	}

	public void setPaypalCerts(Set<PaypalCert> paypalCerts) {
		this.paypalCerts = paypalCerts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coreWebsite")
	public Set<CataloginventoryStockStatus> getCataloginventoryStockStatuses() {
		return this.cataloginventoryStockStatuses;
	}

	public void setCataloginventoryStockStatuses(Set<CataloginventoryStockStatus> cataloginventoryStockStatuses) {
		this.cataloginventoryStockStatuses = cataloginventoryStockStatuses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coreWebsite")
	public Set<CatalogProductIndexTierPrice> getCatalogProductIndexTierPrices() {
		return this.catalogProductIndexTierPrices;
	}

	public void setCatalogProductIndexTierPrices(Set<CatalogProductIndexTierPrice> catalogProductIndexTierPrices) {
		this.catalogProductIndexTierPrices = catalogProductIndexTierPrices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coreWebsite")
	public Set<CatalogruleGroupWebsite> getCatalogruleGroupWebsites() {
		return this.catalogruleGroupWebsites;
	}

	public void setCatalogruleGroupWebsites(Set<CatalogruleGroupWebsite> catalogruleGroupWebsites) {
		this.catalogruleGroupWebsites = catalogruleGroupWebsites;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coreWebsite")
	public Set<CatalogProductEntityGroupPrice> getCatalogProductEntityGroupPrices() {
		return this.catalogProductEntityGroupPrices;
	}

	public void setCatalogProductEntityGroupPrices(Set<CatalogProductEntityGroupPrice> catalogProductEntityGroupPrices) {
		this.catalogProductEntityGroupPrices = catalogProductEntityGroupPrices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coreWebsite")
	public Set<CatalogProductBundlePriceIndex> getCatalogProductBundlePriceIndexes() {
		return this.catalogProductBundlePriceIndexes;
	}

	public void setCatalogProductBundlePriceIndexes(Set<CatalogProductBundlePriceIndex> catalogProductBundlePriceIndexes) {
		this.catalogProductBundlePriceIndexes = catalogProductBundlePriceIndexes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coreWebsite")
	public Set<CatalogProductIndexGroupPrice> getCatalogProductIndexGroupPrices() {
		return this.catalogProductIndexGroupPrices;
	}

	public void setCatalogProductIndexGroupPrices(Set<CatalogProductIndexGroupPrice> catalogProductIndexGroupPrices) {
		this.catalogProductIndexGroupPrices = catalogProductIndexGroupPrices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coreWebsite")
	public Set<WeeeDiscount> getWeeeDiscounts() {
		return this.weeeDiscounts;
	}

	public void setWeeeDiscounts(Set<WeeeDiscount> weeeDiscounts) {
		this.weeeDiscounts = weeeDiscounts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coreWebsite")
	public Set<CatalogProductSuperAttributePricing> getCatalogProductSuperAttributePricings() {
		return this.catalogProductSuperAttributePricings;
	}

	public void setCatalogProductSuperAttributePricings(Set<CatalogProductSuperAttributePricing> catalogProductSuperAttributePricings) {
		this.catalogProductSuperAttributePricings = catalogProductSuperAttributePricings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coreWebsite")
	public Set<ProductAlertStock> getProductAlertStocks() {
		return this.productAlertStocks;
	}

	public void setProductAlertStocks(Set<ProductAlertStock> productAlertStocks) {
		this.productAlertStocks = productAlertStocks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coreWebsite")
	public Set<CatalogProductEntityTierPrice> getCatalogProductEntityTierPrices() {
		return this.catalogProductEntityTierPrices;
	}

	public void setCatalogProductEntityTierPrices(Set<CatalogProductEntityTierPrice> catalogProductEntityTierPrices) {
		this.catalogProductEntityTierPrices = catalogProductEntityTierPrices;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "coreWebsites")
	public Set<Salesrule> getSalesrules() {
		return this.salesrules;
	}

	public void setSalesrules(Set<Salesrule> salesrules) {
		this.salesrules = salesrules;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coreWebsite")
	public Set<SalesruleProductAttribute> getSalesruleProductAttributes() {
		return this.salesruleProductAttributes;
	}

	public void setSalesruleProductAttributes(Set<SalesruleProductAttribute> salesruleProductAttributes) {
		this.salesruleProductAttributes = salesruleProductAttributes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coreWebsite")
	public Set<CatalogruleProduct> getCatalogruleProducts() {
		return this.catalogruleProducts;
	}

	public void setCatalogruleProducts(Set<CatalogruleProduct> catalogruleProducts) {
		this.catalogruleProducts = catalogruleProducts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coreWebsite")
	public Set<CustomerEntity> getCustomerEntities() {
		return this.customerEntities;
	}

	public void setCustomerEntities(Set<CustomerEntity> customerEntities) {
		this.customerEntities = customerEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "website")
	public Set<Store> getStores() {
		return this.stores;
	}

	public void setStores(Set<Store> stores) {
		this.stores = stores;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coreWebsite")
	public Set<WeeeTax> getWeeeTaxes() {
		return this.weeeTaxes;
	}

	public void setWeeeTaxes(Set<WeeeTax> weeeTaxes) {
		this.weeeTaxes = weeeTaxes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coreWebsite")
	public Set<CatalogProductBundleSelectionPrice> getCatalogProductBundleSelectionPrices() {
		return this.catalogProductBundleSelectionPrices;
	}

	public void setCatalogProductBundleSelectionPrices(Set<CatalogProductBundleSelectionPrice> catalogProductBundleSelectionPrices) {
		this.catalogProductBundleSelectionPrices = catalogProductBundleSelectionPrices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coreWebsite")
	public Set<ProductAlertPrice> getProductAlertPrices() {
		return this.productAlertPrices;
	}

	public void setProductAlertPrices(Set<ProductAlertPrice> productAlertPrices) {
		this.productAlertPrices = productAlertPrices;
	}

}
