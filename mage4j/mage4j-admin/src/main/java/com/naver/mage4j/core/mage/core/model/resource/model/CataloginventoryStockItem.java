package com.naver.mage4j.core.mage.core.model.resource.model;

// Generated 2014. 7. 17 ���� 12:15:45 by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * CataloginventoryStockItem generated by hbm2java
 */
@Entity
@Table(name = "cataloginventory_stock_item"
	, catalog = "magento"
	, uniqueConstraints = @UniqueConstraint(columnNames = {"product_id", "stock_id"}))
public class CataloginventoryStockItem implements java.io.Serializable {

	private Integer itemId;
	private CataloginventoryStock cataloginventoryStock;
	private CatalogProductEntity catalogProductEntity;
	private BigDecimal qty;
	private BigDecimal minQty;
	private short useConfigMinQty;
	private short isQtyDecimal;
	private short backorders;
	private short useConfigBackorders;
	private BigDecimal minSaleQty;
	private short useConfigMinSaleQty;
	private BigDecimal maxSaleQty;
	private short useConfigMaxSaleQty;
	private short isInStock;
	private Date lowStockDate;
	private BigDecimal notifyStockQty;
	private short useConfigNotifyStockQty;
	private short manageStock;
	private short useConfigManageStock;
	private short stockStatusChangedAuto;
	private short useConfigQtyIncrements;
	private BigDecimal qtyIncrements;
	private short useConfigEnableQtyInc;
	private short enableQtyIncrements;
	private short isDecimalDivided;

	public CataloginventoryStockItem() {
	}

	public CataloginventoryStockItem(CataloginventoryStock cataloginventoryStock, CatalogProductEntity catalogProductEntity, BigDecimal qty, BigDecimal minQty, short useConfigMinQty, short isQtyDecimal, short backorders, short useConfigBackorders, BigDecimal minSaleQty, short useConfigMinSaleQty, BigDecimal maxSaleQty, short useConfigMaxSaleQty, short isInStock, short useConfigNotifyStockQty, short manageStock, short useConfigManageStock, short stockStatusChangedAuto,
		short useConfigQtyIncrements, BigDecimal qtyIncrements, short useConfigEnableQtyInc, short enableQtyIncrements, short isDecimalDivided) {
		this.cataloginventoryStock = cataloginventoryStock;
		this.catalogProductEntity = catalogProductEntity;
		this.qty = qty;
		this.minQty = minQty;
		this.useConfigMinQty = useConfigMinQty;
		this.isQtyDecimal = isQtyDecimal;
		this.backorders = backorders;
		this.useConfigBackorders = useConfigBackorders;
		this.minSaleQty = minSaleQty;
		this.useConfigMinSaleQty = useConfigMinSaleQty;
		this.maxSaleQty = maxSaleQty;
		this.useConfigMaxSaleQty = useConfigMaxSaleQty;
		this.isInStock = isInStock;
		this.useConfigNotifyStockQty = useConfigNotifyStockQty;
		this.manageStock = manageStock;
		this.useConfigManageStock = useConfigManageStock;
		this.stockStatusChangedAuto = stockStatusChangedAuto;
		this.useConfigQtyIncrements = useConfigQtyIncrements;
		this.qtyIncrements = qtyIncrements;
		this.useConfigEnableQtyInc = useConfigEnableQtyInc;
		this.enableQtyIncrements = enableQtyIncrements;
		this.isDecimalDivided = isDecimalDivided;
	}

	public CataloginventoryStockItem(CataloginventoryStock cataloginventoryStock, CatalogProductEntity catalogProductEntity, BigDecimal qty, BigDecimal minQty, short useConfigMinQty, short isQtyDecimal, short backorders, short useConfigBackorders, BigDecimal minSaleQty, short useConfigMinSaleQty, BigDecimal maxSaleQty, short useConfigMaxSaleQty, short isInStock, Date lowStockDate, BigDecimal notifyStockQty, short useConfigNotifyStockQty, short manageStock, short useConfigManageStock,
		short stockStatusChangedAuto, short useConfigQtyIncrements, BigDecimal qtyIncrements, short useConfigEnableQtyInc, short enableQtyIncrements, short isDecimalDivided) {
		this.cataloginventoryStock = cataloginventoryStock;
		this.catalogProductEntity = catalogProductEntity;
		this.qty = qty;
		this.minQty = minQty;
		this.useConfigMinQty = useConfigMinQty;
		this.isQtyDecimal = isQtyDecimal;
		this.backorders = backorders;
		this.useConfigBackorders = useConfigBackorders;
		this.minSaleQty = minSaleQty;
		this.useConfigMinSaleQty = useConfigMinSaleQty;
		this.maxSaleQty = maxSaleQty;
		this.useConfigMaxSaleQty = useConfigMaxSaleQty;
		this.isInStock = isInStock;
		this.lowStockDate = lowStockDate;
		this.notifyStockQty = notifyStockQty;
		this.useConfigNotifyStockQty = useConfigNotifyStockQty;
		this.manageStock = manageStock;
		this.useConfigManageStock = useConfigManageStock;
		this.stockStatusChangedAuto = stockStatusChangedAuto;
		this.useConfigQtyIncrements = useConfigQtyIncrements;
		this.qtyIncrements = qtyIncrements;
		this.useConfigEnableQtyInc = useConfigEnableQtyInc;
		this.enableQtyIncrements = enableQtyIncrements;
		this.isDecimalDivided = isDecimalDivided;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "item_id", unique = true, nullable = false)
	public Integer getItemId() {
		return this.itemId;
	}

	public void setItemId(Integer itemId) {
		this.itemId = itemId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "stock_id", nullable = false)
	public CataloginventoryStock getCataloginventoryStock() {
		return this.cataloginventoryStock;
	}

	public void setCataloginventoryStock(CataloginventoryStock cataloginventoryStock) {
		this.cataloginventoryStock = cataloginventoryStock;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "product_id", nullable = false)
	public CatalogProductEntity getCatalogProductEntity() {
		return this.catalogProductEntity;
	}

	public void setCatalogProductEntity(CatalogProductEntity catalogProductEntity) {
		this.catalogProductEntity = catalogProductEntity;
	}

	@Column(name = "qty", nullable = false, precision = 12, scale = 4)
	public BigDecimal getQty() {
		return this.qty;
	}

	public void setQty(BigDecimal qty) {
		this.qty = qty;
	}

	@Column(name = "min_qty", nullable = false, precision = 12, scale = 4)
	public BigDecimal getMinQty() {
		return this.minQty;
	}

	public void setMinQty(BigDecimal minQty) {
		this.minQty = minQty;
	}

	@Column(name = "use_config_min_qty", nullable = false)
	public short getUseConfigMinQty() {
		return this.useConfigMinQty;
	}

	public void setUseConfigMinQty(short useConfigMinQty) {
		this.useConfigMinQty = useConfigMinQty;
	}

	@Column(name = "is_qty_decimal", nullable = false)
	public short getIsQtyDecimal() {
		return this.isQtyDecimal;
	}

	public void setIsQtyDecimal(short isQtyDecimal) {
		this.isQtyDecimal = isQtyDecimal;
	}

	@Column(name = "backorders", nullable = false)
	public short getBackorders() {
		return this.backorders;
	}

	public void setBackorders(short backorders) {
		this.backorders = backorders;
	}

	@Column(name = "use_config_backorders", nullable = false)
	public short getUseConfigBackorders() {
		return this.useConfigBackorders;
	}

	public void setUseConfigBackorders(short useConfigBackorders) {
		this.useConfigBackorders = useConfigBackorders;
	}

	@Column(name = "min_sale_qty", nullable = false, precision = 12, scale = 4)
	public BigDecimal getMinSaleQty() {
		return this.minSaleQty;
	}

	public void setMinSaleQty(BigDecimal minSaleQty) {
		this.minSaleQty = minSaleQty;
	}

	@Column(name = "use_config_min_sale_qty", nullable = false)
	public short getUseConfigMinSaleQty() {
		return this.useConfigMinSaleQty;
	}

	public void setUseConfigMinSaleQty(short useConfigMinSaleQty) {
		this.useConfigMinSaleQty = useConfigMinSaleQty;
	}

	@Column(name = "max_sale_qty", nullable = false, precision = 12, scale = 4)
	public BigDecimal getMaxSaleQty() {
		return this.maxSaleQty;
	}

	public void setMaxSaleQty(BigDecimal maxSaleQty) {
		this.maxSaleQty = maxSaleQty;
	}

	@Column(name = "use_config_max_sale_qty", nullable = false)
	public short getUseConfigMaxSaleQty() {
		return this.useConfigMaxSaleQty;
	}

	public void setUseConfigMaxSaleQty(short useConfigMaxSaleQty) {
		this.useConfigMaxSaleQty = useConfigMaxSaleQty;
	}

	@Column(name = "is_in_stock", nullable = false)
	public short getIsInStock() {
		return this.isInStock;
	}

	public void setIsInStock(short isInStock) {
		this.isInStock = isInStock;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "low_stock_date", length = 19)
	public Date getLowStockDate() {
		return this.lowStockDate;
	}

	public void setLowStockDate(Date lowStockDate) {
		this.lowStockDate = lowStockDate;
	}

	@Column(name = "notify_stock_qty", precision = 12, scale = 4)
	public BigDecimal getNotifyStockQty() {
		return this.notifyStockQty;
	}

	public void setNotifyStockQty(BigDecimal notifyStockQty) {
		this.notifyStockQty = notifyStockQty;
	}

	@Column(name = "use_config_notify_stock_qty", nullable = false)
	public short getUseConfigNotifyStockQty() {
		return this.useConfigNotifyStockQty;
	}

	public void setUseConfigNotifyStockQty(short useConfigNotifyStockQty) {
		this.useConfigNotifyStockQty = useConfigNotifyStockQty;
	}

	@Column(name = "manage_stock", nullable = false)
	public short getManageStock() {
		return this.manageStock;
	}

	public void setManageStock(short manageStock) {
		this.manageStock = manageStock;
	}

	@Column(name = "use_config_manage_stock", nullable = false)
	public short getUseConfigManageStock() {
		return this.useConfigManageStock;
	}

	public void setUseConfigManageStock(short useConfigManageStock) {
		this.useConfigManageStock = useConfigManageStock;
	}

	@Column(name = "stock_status_changed_auto", nullable = false)
	public short getStockStatusChangedAuto() {
		return this.stockStatusChangedAuto;
	}

	public void setStockStatusChangedAuto(short stockStatusChangedAuto) {
		this.stockStatusChangedAuto = stockStatusChangedAuto;
	}

	@Column(name = "use_config_qty_increments", nullable = false)
	public short getUseConfigQtyIncrements() {
		return this.useConfigQtyIncrements;
	}

	public void setUseConfigQtyIncrements(short useConfigQtyIncrements) {
		this.useConfigQtyIncrements = useConfigQtyIncrements;
	}

	@Column(name = "qty_increments", nullable = false, precision = 12, scale = 4)
	public BigDecimal getQtyIncrements() {
		return this.qtyIncrements;
	}

	public void setQtyIncrements(BigDecimal qtyIncrements) {
		this.qtyIncrements = qtyIncrements;
	}

	@Column(name = "use_config_enable_qty_inc", nullable = false)
	public short getUseConfigEnableQtyInc() {
		return this.useConfigEnableQtyInc;
	}

	public void setUseConfigEnableQtyInc(short useConfigEnableQtyInc) {
		this.useConfigEnableQtyInc = useConfigEnableQtyInc;
	}

	@Column(name = "enable_qty_increments", nullable = false)
	public short getEnableQtyIncrements() {
		return this.enableQtyIncrements;
	}

	public void setEnableQtyIncrements(short enableQtyIncrements) {
		this.enableQtyIncrements = enableQtyIncrements;
	}

	@Column(name = "is_decimal_divided", nullable = false)
	public short getIsDecimalDivided() {
		return this.isDecimalDivided;
	}

	public void setIsDecimalDivided(short isDecimalDivided) {
		this.isDecimalDivided = isDecimalDivided;
	}

}
