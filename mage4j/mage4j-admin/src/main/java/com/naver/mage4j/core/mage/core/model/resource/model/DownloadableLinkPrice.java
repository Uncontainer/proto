package com.naver.mage4j.core.mage.core.model.resource.model;

// Generated 2014. 7. 17 ���� 12:15:45 by Hibernate Tools 4.0.0

import java.math.BigDecimal;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import com.naver.mage4j.core.mage.core.model.resource.website.Website;

/**
 * DownloadableLinkPrice generated by hbm2java
 */
@Entity
@Table(name = "downloadable_link_price"
	, catalog = "magento")
public class DownloadableLinkPrice implements java.io.Serializable {

	private Integer priceId;
	private Website coreWebsite;
	private DownloadableLink downloadableLink;
	private BigDecimal price;

	public DownloadableLinkPrice() {
	}

	public DownloadableLinkPrice(Website coreWebsite, DownloadableLink downloadableLink, BigDecimal price) {
		this.coreWebsite = coreWebsite;
		this.downloadableLink = downloadableLink;
		this.price = price;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "price_id", unique = true, nullable = false)
	public Integer getPriceId() {
		return this.priceId;
	}

	public void setPriceId(Integer priceId) {
		this.priceId = priceId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "website_id", nullable = false)
	public Website getCoreWebsite() {
		return this.coreWebsite;
	}

	public void setCoreWebsite(Website coreWebsite) {
		this.coreWebsite = coreWebsite;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "link_id", nullable = false)
	public DownloadableLink getDownloadableLink() {
		return this.downloadableLink;
	}

	public void setDownloadableLink(DownloadableLink downloadableLink) {
		this.downloadableLink = downloadableLink;
	}

	@Column(name = "price", nullable = false, precision = 12, scale = 4)
	public BigDecimal getPrice() {
		return this.price;
	}

	public void setPrice(BigDecimal price) {
		this.price = price;
	}

}
