package com.naver.mage4j.core.mage.core.model.resource.model;

// Generated 2014. 7. 17 ���� 12:15:45 by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.*;

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.naver.mage4j.core.mage.core.model.resource.website.Website;

/**
 * Catalogrule generated by hbm2java
 */
@Entity
@Table(name = "catalogrule"
	, catalog = "magento")
public class Catalogrule implements java.io.Serializable {

	private Integer ruleId;
	private String name;
	private String description;
	private Date fromDate;
	private Date toDate;
	private short isActive;
	private String conditionsSerialized;
	private String actionsSerialized;
	private short stopRulesProcessing;
	private int sortOrder;
	private String simpleAction;
	private BigDecimal discountAmount;
	private short subIsEnable;
	private String subSimpleAction;
	private BigDecimal subDiscountAmount;
	private Set<CustomerGroup> customerGroups = new HashSet<CustomerGroup>(0);
	private Set<CatalogruleGroupWebsite> catalogruleGroupWebsites = new HashSet<CatalogruleGroupWebsite>(0);
	private Set<Website> coreWebsites = new HashSet<Website>(0);
	private Set<CatalogruleProduct> catalogruleProducts = new HashSet<CatalogruleProduct>(0);

	public Catalogrule() {
	}

	public Catalogrule(short isActive, short stopRulesProcessing, int sortOrder, BigDecimal discountAmount, short subIsEnable, BigDecimal subDiscountAmount) {
		this.isActive = isActive;
		this.stopRulesProcessing = stopRulesProcessing;
		this.sortOrder = sortOrder;
		this.discountAmount = discountAmount;
		this.subIsEnable = subIsEnable;
		this.subDiscountAmount = subDiscountAmount;
	}

	public Catalogrule(String name, String description, Date fromDate, Date toDate, short isActive, String conditionsSerialized, String actionsSerialized, short stopRulesProcessing, int sortOrder, String simpleAction, BigDecimal discountAmount, short subIsEnable, String subSimpleAction, BigDecimal subDiscountAmount, Set<CustomerGroup> customerGroups, Set<CatalogruleGroupWebsite> catalogruleGroupWebsites, Set<Website> coreWebsites, Set<CatalogruleProduct> catalogruleProducts) {
		this.name = name;
		this.description = description;
		this.fromDate = fromDate;
		this.toDate = toDate;
		this.isActive = isActive;
		this.conditionsSerialized = conditionsSerialized;
		this.actionsSerialized = actionsSerialized;
		this.stopRulesProcessing = stopRulesProcessing;
		this.sortOrder = sortOrder;
		this.simpleAction = simpleAction;
		this.discountAmount = discountAmount;
		this.subIsEnable = subIsEnable;
		this.subSimpleAction = subSimpleAction;
		this.subDiscountAmount = subDiscountAmount;
		this.customerGroups = customerGroups;
		this.catalogruleGroupWebsites = catalogruleGroupWebsites;
		this.coreWebsites = coreWebsites;
		this.catalogruleProducts = catalogruleProducts;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "rule_id", unique = true, nullable = false)
	public Integer getRuleId() {
		return this.ruleId;
	}

	public void setRuleId(Integer ruleId) {
		this.ruleId = ruleId;
	}

	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", length = 65535, columnDefinition = "TEXT")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "from_date", length = 10)
	public Date getFromDate() {
		return this.fromDate;
	}

	public void setFromDate(Date fromDate) {
		this.fromDate = fromDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "to_date", length = 10)
	public Date getToDate() {
		return this.toDate;
	}

	public void setToDate(Date toDate) {
		this.toDate = toDate;
	}

	@Column(name = "is_active", nullable = false)
	public short getIsActive() {
		return this.isActive;
	}

	public void setIsActive(short isActive) {
		this.isActive = isActive;
	}

	@Column(name = "conditions_serialized", length = 16777215, columnDefinition = "MEDIUMTEXT")
	public String getConditionsSerialized() {
		return this.conditionsSerialized;
	}

	public void setConditionsSerialized(String conditionsSerialized) {
		this.conditionsSerialized = conditionsSerialized;
	}

	@Column(name = "actions_serialized", length = 16777215, columnDefinition = "MEDIUMTEXT")
	public String getActionsSerialized() {
		return this.actionsSerialized;
	}

	public void setActionsSerialized(String actionsSerialized) {
		this.actionsSerialized = actionsSerialized;
	}

	@Column(name = "stop_rules_processing", nullable = false)
	public short getStopRulesProcessing() {
		return this.stopRulesProcessing;
	}

	public void setStopRulesProcessing(short stopRulesProcessing) {
		this.stopRulesProcessing = stopRulesProcessing;
	}

	@Column(name = "sort_order", nullable = false)
	public int getSortOrder() {
		return this.sortOrder;
	}

	public void setSortOrder(int sortOrder) {
		this.sortOrder = sortOrder;
	}

	@Column(name = "simple_action", length = 32)
	public String getSimpleAction() {
		return this.simpleAction;
	}

	public void setSimpleAction(String simpleAction) {
		this.simpleAction = simpleAction;
	}

	@Column(name = "discount_amount", nullable = false, precision = 12, scale = 4)
	public BigDecimal getDiscountAmount() {
		return this.discountAmount;
	}

	public void setDiscountAmount(BigDecimal discountAmount) {
		this.discountAmount = discountAmount;
	}

	@Column(name = "sub_is_enable", nullable = false)
	public short getSubIsEnable() {
		return this.subIsEnable;
	}

	public void setSubIsEnable(short subIsEnable) {
		this.subIsEnable = subIsEnable;
	}

	@Column(name = "sub_simple_action", length = 32)
	public String getSubSimpleAction() {
		return this.subSimpleAction;
	}

	public void setSubSimpleAction(String subSimpleAction) {
		this.subSimpleAction = subSimpleAction;
	}

	@Column(name = "sub_discount_amount", nullable = false, precision = 12, scale = 4)
	public BigDecimal getSubDiscountAmount() {
		return this.subDiscountAmount;
	}

	public void setSubDiscountAmount(BigDecimal subDiscountAmount) {
		this.subDiscountAmount = subDiscountAmount;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "catalogrule_customer_group", catalog = "magento", joinColumns = {
		@JoinColumn(name = "rule_id", nullable = false, updatable = false)}, inverseJoinColumns = {
		@JoinColumn(name = "customer_group_id", nullable = false, updatable = false)})
	public Set<CustomerGroup> getCustomerGroups() {
		return this.customerGroups;
	}

	public void setCustomerGroups(Set<CustomerGroup> customerGroups) {
		this.customerGroups = customerGroups;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogrule")
	public Set<CatalogruleGroupWebsite> getCatalogruleGroupWebsites() {
		return this.catalogruleGroupWebsites;
	}

	public void setCatalogruleGroupWebsites(Set<CatalogruleGroupWebsite> catalogruleGroupWebsites) {
		this.catalogruleGroupWebsites = catalogruleGroupWebsites;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "catalogrule_website", catalog = "magento", joinColumns = {
		@JoinColumn(name = "rule_id", nullable = false, updatable = false)}, inverseJoinColumns = {
		@JoinColumn(name = "website_id", nullable = false, updatable = false)})
	public Set<Website> getCoreWebsites() {
		return this.coreWebsites;
	}

	public void setCoreWebsites(Set<Website> coreWebsites) {
		this.coreWebsites = coreWebsites;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogrule")
	public Set<CatalogruleProduct> getCatalogruleProducts() {
		return this.catalogruleProducts;
	}

	public void setCatalogruleProducts(Set<CatalogruleProduct> catalogruleProducts) {
		this.catalogruleProducts = catalogruleProducts;
	}

}
