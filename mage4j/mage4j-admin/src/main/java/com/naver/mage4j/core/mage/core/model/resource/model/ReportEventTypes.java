package com.naver.mage4j.core.mage.core.model.resource.model;

// Generated 2014. 7. 17 ���� 12:15:45 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ReportEventTypes generated by hbm2java
 */
@Entity
@Table(name = "report_event_types"
	, catalog = "magento")
public class ReportEventTypes implements java.io.Serializable {

	private Short eventTypeId;
	private String eventName;
	private short customerLogin;
	private Set<ReportEvent> reportEvents = new HashSet<ReportEvent>(0);

	public ReportEventTypes() {
	}

	public ReportEventTypes(String eventName, short customerLogin) {
		this.eventName = eventName;
		this.customerLogin = customerLogin;
	}

	public ReportEventTypes(String eventName, short customerLogin, Set<ReportEvent> reportEvents) {
		this.eventName = eventName;
		this.customerLogin = customerLogin;
		this.reportEvents = reportEvents;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "event_type_id", unique = true, nullable = false)
	public Short getEventTypeId() {
		return this.eventTypeId;
	}

	public void setEventTypeId(Short eventTypeId) {
		this.eventTypeId = eventTypeId;
	}

	@Column(name = "event_name", nullable = false, length = 64)
	public String getEventName() {
		return this.eventName;
	}

	public void setEventName(String eventName) {
		this.eventName = eventName;
	}

	@Column(name = "customer_login", nullable = false)
	public short getCustomerLogin() {
		return this.customerLogin;
	}

	public void setCustomerLogin(short customerLogin) {
		this.customerLogin = customerLogin;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "reportEventTypes")
	public Set<ReportEvent> getReportEvents() {
		return this.reportEvents;
	}

	public void setReportEvents(Set<ReportEvent> reportEvents) {
		this.reportEvents = reportEvents;
	}

}
