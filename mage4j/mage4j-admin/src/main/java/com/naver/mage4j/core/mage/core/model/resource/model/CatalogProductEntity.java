package com.naver.mage4j.core.mage.core.model.resource.model;

// Generated 2014. 7. 17 ���� 12:15:45 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.naver.mage4j.core.mage.core.model.resource.url.UrlRewrite;
import com.naver.mage4j.core.mage.core.model.resource.website.Website;

/**
 * CatalogProductEntity generated by hbm2java
 */
@Entity
@Table(name = "catalog_product_entity"
	, catalog = "magento")
public class CatalogProductEntity implements java.io.Serializable {

	private Integer entityId;
	private EavEntityType eavEntityType;
	private EavAttributeSet eavAttributeSet;
	private String typeId;
	private String sku;
	private short hasOptions;
	private short requiredOptions;
	private Date createdAt;
	private Date updatedAt;
	private Set<CatalogProductIndexTierPrice> catalogProductIndexTierPrices = new HashSet<CatalogProductIndexTierPrice>(0);
	private Set<CatalogProductBundlePriceIndex> catalogProductBundlePriceIndexes = new HashSet<CatalogProductBundlePriceIndex>(0);
	private Set<CatalogruleProduct> catalogruleProducts = new HashSet<CatalogruleProduct>(0);
	private Set<DownloadableSample> downloadableSamples = new HashSet<DownloadableSample>(0);
	private Set<ReportViewedProductAggregatedDaily> reportViewedProductAggregatedDailies = new HashSet<ReportViewedProductAggregatedDaily>(0);
	private Set<CatalogProductEntityVarchar> catalogProductEntityVarchars = new HashSet<CatalogProductEntityVarchar>(0);
	private Set<CatalogProductBundleSelection> catalogProductBundleSelections = new HashSet<CatalogProductBundleSelection>(0);
	private Set<UrlRewrite> coreUrlRewrites = new HashSet<UrlRewrite>(0);
	private Set<TagRelation> tagRelations = new HashSet<TagRelation>(0);
	private Set<ReportComparedProductIndex> reportComparedProductIndexes = new HashSet<ReportComparedProductIndex>(0);
	private Set<CatalogProductLink> catalogProductLinksForLinkedProductId = new HashSet<CatalogProductLink>(0);
	private Set<Website> coreWebsites = new HashSet<Website>(0);
	private Set<SalesBestsellersAggregatedMonthly> salesBestsellersAggregatedMonthlies = new HashSet<SalesBestsellersAggregatedMonthly>(0);
	private Set<ProductAlertStock> productAlertStocks = new HashSet<ProductAlertStock>(0);
	private Set<WeeeDiscount> weeeDiscounts = new HashSet<WeeeDiscount>(0);
	private Set<CatalogProductSuperLink> catalogProductSuperLinksForParentId = new HashSet<CatalogProductSuperLink>(0);
	private Set<CatalogsearchResult> catalogsearchResults = new HashSet<CatalogsearchResult>(0);
	private Set<CatalogProductEntityGallery> catalogProductEntityGalleries = new HashSet<CatalogProductEntityGallery>(0);
	private Set<CatalogCategoryProductIndex> catalogCategoryProductIndexes = new HashSet<CatalogCategoryProductIndex>(0);
	private Set<CatalogProductEntityInt> catalogProductEntityInts = new HashSet<CatalogProductEntityInt>(0);
	private Set<CatalogProductIndexEavDecimal> catalogProductIndexEavDecimals = new HashSet<CatalogProductIndexEavDecimal>(0);
	private Set<ReportViewedProductIndex> reportViewedProductIndexes = new HashSet<ReportViewedProductIndex>(0);
	private Set<CatalogProductEntityGroupPrice> catalogProductEntityGroupPrices = new HashSet<CatalogProductEntityGroupPrice>(0);
	private Set<CatalogProductEntityDatetime> catalogProductEntityDatetimes = new HashSet<CatalogProductEntityDatetime>(0);
	private Set<CataloginventoryStockItem> cataloginventoryStockItems = new HashSet<CataloginventoryStockItem>(0);
	private Set<CatalogProductSuperLink> catalogProductSuperLinksForProductId = new HashSet<CatalogProductSuperLink>(0);
	private Set<SalesFlatQuoteItem> salesFlatQuoteItems = new HashSet<SalesFlatQuoteItem>(0);
	private Set<CatalogProductIndexEav> catalogProductIndexEavs = new HashSet<CatalogProductIndexEav>(0);
	private Set<WishlistItem> wishlistItems = new HashSet<WishlistItem>(0);
	private Set<CatalogProductEntityText> catalogProductEntityTexts = new HashSet<CatalogProductEntityText>(0);
	private Set<CatalogProductEntityDecimal> catalogProductEntityDecimals = new HashSet<CatalogProductEntityDecimal>(0);
	private Set<CatalogCompareItem> catalogCompareItems = new HashSet<CatalogCompareItem>(0);
	private Set<SalesBestsellersAggregatedYearly> salesBestsellersAggregatedYearlies = new HashSet<SalesBestsellersAggregatedYearly>(0);
	private Set<CatalogruleProductPrice> catalogruleProductPrices = new HashSet<CatalogruleProductPrice>(0);
	private Set<ProductAlertPrice> productAlertPrices = new HashSet<ProductAlertPrice>(0);
	private Set<ReportViewedProductAggregatedMonthly> reportViewedProductAggregatedMonthlies = new HashSet<ReportViewedProductAggregatedMonthly>(0);
	private Set<CataloginventoryStockStatus> cataloginventoryStockStatuses = new HashSet<CataloginventoryStockStatus>(0);
	private Set<CatalogProductOption> catalogProductOptions = new HashSet<CatalogProductOption>(0);
	private Set<DownloadableLink> downloadableLinks = new HashSet<DownloadableLink>(0);
	private Set<CatalogProductEntity> catalogProductEntitiesForParentId = new HashSet<CatalogProductEntity>(0);
	private Set<SalesBestsellersAggregatedDaily> salesBestsellersAggregatedDailies = new HashSet<SalesBestsellersAggregatedDaily>(0);
	private Set<CatalogProductEntity> catalogProductEntitiesForChildId = new HashSet<CatalogProductEntity>(0);
	private Set<CatalogProductEntityMediaGallery> catalogProductEntityMediaGalleries = new HashSet<CatalogProductEntityMediaGallery>(0);
	private Set<CatalogProductBundleOption> catalogProductBundleOptions = new HashSet<CatalogProductBundleOption>(0);
	private Set<CatalogProductEntityTierPrice> catalogProductEntityTierPrices = new HashSet<CatalogProductEntityTierPrice>(0);
	private Set<CatalogProductSuperAttribute> catalogProductSuperAttributes = new HashSet<CatalogProductSuperAttribute>(0);
	private Set<CatalogCategoryProduct> catalogCategoryProducts = new HashSet<CatalogCategoryProduct>(0);
	private Set<CatalogProductEnabledIndex> catalogProductEnabledIndexes = new HashSet<CatalogProductEnabledIndex>(0);
	private Set<WeeeTax> weeeTaxes = new HashSet<WeeeTax>(0);
	private Set<CatalogProductIndexPrice> catalogProductIndexPrices = new HashSet<CatalogProductIndexPrice>(0);
	private Set<ReportViewedProductAggregatedYearly> reportViewedProductAggregatedYearlies = new HashSet<ReportViewedProductAggregatedYearly>(0);
	private Set<CatalogProductLink> catalogProductLinksForProductId = new HashSet<CatalogProductLink>(0);
	private Set<CatalogProductIndexGroupPrice> catalogProductIndexGroupPrices = new HashSet<CatalogProductIndexGroupPrice>(0);

	public CatalogProductEntity() {
	}

	public CatalogProductEntity(EavEntityType eavEntityType, EavAttributeSet eavAttributeSet, String typeId, short hasOptions, short requiredOptions) {
		this.eavEntityType = eavEntityType;
		this.eavAttributeSet = eavAttributeSet;
		this.typeId = typeId;
		this.hasOptions = hasOptions;
		this.requiredOptions = requiredOptions;
	}

	public CatalogProductEntity(EavEntityType eavEntityType, EavAttributeSet eavAttributeSet, String typeId, String sku, short hasOptions, short requiredOptions, Date createdAt, Date updatedAt, Set<CatalogProductIndexTierPrice> catalogProductIndexTierPrices, Set<CatalogProductBundlePriceIndex> catalogProductBundlePriceIndexes, Set<CatalogruleProduct> catalogruleProducts, Set<DownloadableSample> downloadableSamples, Set<ReportViewedProductAggregatedDaily> reportViewedProductAggregatedDailies,
		Set<CatalogProductEntityVarchar> catalogProductEntityVarchars, Set<CatalogProductBundleSelection> catalogProductBundleSelections, Set<UrlRewrite> coreUrlRewrites, Set<TagRelation> tagRelations, Set<ReportComparedProductIndex> reportComparedProductIndexes, Set<CatalogProductLink> catalogProductLinksForLinkedProductId, Set<Website> coreWebsites, Set<SalesBestsellersAggregatedMonthly> salesBestsellersAggregatedMonthlies, Set<ProductAlertStock> productAlertStocks,
		Set<WeeeDiscount> weeeDiscounts, Set<CatalogProductSuperLink> catalogProductSuperLinksForParentId, Set<CatalogsearchResult> catalogsearchResults, Set<CatalogProductEntityGallery> catalogProductEntityGalleries, Set<CatalogCategoryProductIndex> catalogCategoryProductIndexes, Set<CatalogProductEntityInt> catalogProductEntityInts, Set<CatalogProductIndexEavDecimal> catalogProductIndexEavDecimals, Set<ReportViewedProductIndex> reportViewedProductIndexes,
		Set<CatalogProductEntityGroupPrice> catalogProductEntityGroupPrices, Set<CatalogProductEntityDatetime> catalogProductEntityDatetimes, Set<CataloginventoryStockItem> cataloginventoryStockItems, Set<CatalogProductSuperLink> catalogProductSuperLinksForProductId, Set<SalesFlatQuoteItem> salesFlatQuoteItems, Set<CatalogProductIndexEav> catalogProductIndexEavs, Set<WishlistItem> wishlistItems, Set<CatalogProductEntityText> catalogProductEntityTexts,
		Set<CatalogProductEntityDecimal> catalogProductEntityDecimals, Set<CatalogCompareItem> catalogCompareItems, Set<SalesBestsellersAggregatedYearly> salesBestsellersAggregatedYearlies, Set<CatalogruleProductPrice> catalogruleProductPrices, Set<ProductAlertPrice> productAlertPrices, Set<ReportViewedProductAggregatedMonthly> reportViewedProductAggregatedMonthlies, Set<CataloginventoryStockStatus> cataloginventoryStockStatuses, Set<CatalogProductOption> catalogProductOptions,
		Set<DownloadableLink> downloadableLinks, Set<CatalogProductEntity> catalogProductEntitiesForParentId, Set<SalesBestsellersAggregatedDaily> salesBestsellersAggregatedDailies, Set<CatalogProductEntity> catalogProductEntitiesForChildId, Set<CatalogProductEntityMediaGallery> catalogProductEntityMediaGalleries, Set<CatalogProductBundleOption> catalogProductBundleOptions, Set<CatalogProductEntityTierPrice> catalogProductEntityTierPrices,
		Set<CatalogProductSuperAttribute> catalogProductSuperAttributes, Set<CatalogCategoryProduct> catalogCategoryProducts, Set<CatalogProductEnabledIndex> catalogProductEnabledIndexes, Set<WeeeTax> weeeTaxes, Set<CatalogProductIndexPrice> catalogProductIndexPrices, Set<ReportViewedProductAggregatedYearly> reportViewedProductAggregatedYearlies, Set<CatalogProductLink> catalogProductLinksForProductId, Set<CatalogProductIndexGroupPrice> catalogProductIndexGroupPrices) {
		this.eavEntityType = eavEntityType;
		this.eavAttributeSet = eavAttributeSet;
		this.typeId = typeId;
		this.sku = sku;
		this.hasOptions = hasOptions;
		this.requiredOptions = requiredOptions;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.catalogProductIndexTierPrices = catalogProductIndexTierPrices;
		this.catalogProductBundlePriceIndexes = catalogProductBundlePriceIndexes;
		this.catalogruleProducts = catalogruleProducts;
		this.downloadableSamples = downloadableSamples;
		this.reportViewedProductAggregatedDailies = reportViewedProductAggregatedDailies;
		this.catalogProductEntityVarchars = catalogProductEntityVarchars;
		this.catalogProductBundleSelections = catalogProductBundleSelections;
		this.coreUrlRewrites = coreUrlRewrites;
		this.tagRelations = tagRelations;
		this.reportComparedProductIndexes = reportComparedProductIndexes;
		this.catalogProductLinksForLinkedProductId = catalogProductLinksForLinkedProductId;
		this.coreWebsites = coreWebsites;
		this.salesBestsellersAggregatedMonthlies = salesBestsellersAggregatedMonthlies;
		this.productAlertStocks = productAlertStocks;
		this.weeeDiscounts = weeeDiscounts;
		this.catalogProductSuperLinksForParentId = catalogProductSuperLinksForParentId;
		this.catalogsearchResults = catalogsearchResults;
		this.catalogProductEntityGalleries = catalogProductEntityGalleries;
		this.catalogCategoryProductIndexes = catalogCategoryProductIndexes;
		this.catalogProductEntityInts = catalogProductEntityInts;
		this.catalogProductIndexEavDecimals = catalogProductIndexEavDecimals;
		this.reportViewedProductIndexes = reportViewedProductIndexes;
		this.catalogProductEntityGroupPrices = catalogProductEntityGroupPrices;
		this.catalogProductEntityDatetimes = catalogProductEntityDatetimes;
		this.cataloginventoryStockItems = cataloginventoryStockItems;
		this.catalogProductSuperLinksForProductId = catalogProductSuperLinksForProductId;
		this.salesFlatQuoteItems = salesFlatQuoteItems;
		this.catalogProductIndexEavs = catalogProductIndexEavs;
		this.wishlistItems = wishlistItems;
		this.catalogProductEntityTexts = catalogProductEntityTexts;
		this.catalogProductEntityDecimals = catalogProductEntityDecimals;
		this.catalogCompareItems = catalogCompareItems;
		this.salesBestsellersAggregatedYearlies = salesBestsellersAggregatedYearlies;
		this.catalogruleProductPrices = catalogruleProductPrices;
		this.productAlertPrices = productAlertPrices;
		this.reportViewedProductAggregatedMonthlies = reportViewedProductAggregatedMonthlies;
		this.cataloginventoryStockStatuses = cataloginventoryStockStatuses;
		this.catalogProductOptions = catalogProductOptions;
		this.downloadableLinks = downloadableLinks;
		this.catalogProductEntitiesForParentId = catalogProductEntitiesForParentId;
		this.salesBestsellersAggregatedDailies = salesBestsellersAggregatedDailies;
		this.catalogProductEntitiesForChildId = catalogProductEntitiesForChildId;
		this.catalogProductEntityMediaGalleries = catalogProductEntityMediaGalleries;
		this.catalogProductBundleOptions = catalogProductBundleOptions;
		this.catalogProductEntityTierPrices = catalogProductEntityTierPrices;
		this.catalogProductSuperAttributes = catalogProductSuperAttributes;
		this.catalogCategoryProducts = catalogCategoryProducts;
		this.catalogProductEnabledIndexes = catalogProductEnabledIndexes;
		this.weeeTaxes = weeeTaxes;
		this.catalogProductIndexPrices = catalogProductIndexPrices;
		this.reportViewedProductAggregatedYearlies = reportViewedProductAggregatedYearlies;
		this.catalogProductLinksForProductId = catalogProductLinksForProductId;
		this.catalogProductIndexGroupPrices = catalogProductIndexGroupPrices;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "entity_id", unique = true, nullable = false)
	public Integer getEntityId() {
		return this.entityId;
	}

	public void setEntityId(Integer entityId) {
		this.entityId = entityId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "entity_type_id", nullable = false)
	public EavEntityType getEavEntityType() {
		return this.eavEntityType;
	}

	public void setEavEntityType(EavEntityType eavEntityType) {
		this.eavEntityType = eavEntityType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "attribute_set_id", nullable = false)
	public EavAttributeSet getEavAttributeSet() {
		return this.eavAttributeSet;
	}

	public void setEavAttributeSet(EavAttributeSet eavAttributeSet) {
		this.eavAttributeSet = eavAttributeSet;
	}

	@Column(name = "type_id", nullable = false, length = 32)
	public String getTypeId() {
		return this.typeId;
	}

	public void setTypeId(String typeId) {
		this.typeId = typeId;
	}

	@Column(name = "sku", length = 64)
	public String getSku() {
		return this.sku;
	}

	public void setSku(String sku) {
		this.sku = sku;
	}

	@Column(name = "has_options", nullable = false)
	public short getHasOptions() {
		return this.hasOptions;
	}

	public void setHasOptions(short hasOptions) {
		this.hasOptions = hasOptions;
	}

	@Column(name = "required_options", nullable = false)
	public short getRequiredOptions() {
		return this.requiredOptions;
	}

	public void setRequiredOptions(short requiredOptions) {
		this.requiredOptions = requiredOptions;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductIndexTierPrice> getCatalogProductIndexTierPrices() {
		return this.catalogProductIndexTierPrices;
	}

	public void setCatalogProductIndexTierPrices(Set<CatalogProductIndexTierPrice> catalogProductIndexTierPrices) {
		this.catalogProductIndexTierPrices = catalogProductIndexTierPrices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductBundlePriceIndex> getCatalogProductBundlePriceIndexes() {
		return this.catalogProductBundlePriceIndexes;
	}

	public void setCatalogProductBundlePriceIndexes(Set<CatalogProductBundlePriceIndex> catalogProductBundlePriceIndexes) {
		this.catalogProductBundlePriceIndexes = catalogProductBundlePriceIndexes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogruleProduct> getCatalogruleProducts() {
		return this.catalogruleProducts;
	}

	public void setCatalogruleProducts(Set<CatalogruleProduct> catalogruleProducts) {
		this.catalogruleProducts = catalogruleProducts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<DownloadableSample> getDownloadableSamples() {
		return this.downloadableSamples;
	}

	public void setDownloadableSamples(Set<DownloadableSample> downloadableSamples) {
		this.downloadableSamples = downloadableSamples;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<ReportViewedProductAggregatedDaily> getReportViewedProductAggregatedDailies() {
		return this.reportViewedProductAggregatedDailies;
	}

	public void setReportViewedProductAggregatedDailies(Set<ReportViewedProductAggregatedDaily> reportViewedProductAggregatedDailies) {
		this.reportViewedProductAggregatedDailies = reportViewedProductAggregatedDailies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductEntityVarchar> getCatalogProductEntityVarchars() {
		return this.catalogProductEntityVarchars;
	}

	public void setCatalogProductEntityVarchars(Set<CatalogProductEntityVarchar> catalogProductEntityVarchars) {
		this.catalogProductEntityVarchars = catalogProductEntityVarchars;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductBundleSelection> getCatalogProductBundleSelections() {
		return this.catalogProductBundleSelections;
	}

	public void setCatalogProductBundleSelections(Set<CatalogProductBundleSelection> catalogProductBundleSelections) {
		this.catalogProductBundleSelections = catalogProductBundleSelections;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<UrlRewrite> getCoreUrlRewrites() {
		return this.coreUrlRewrites;
	}

	public void setCoreUrlRewrites(Set<UrlRewrite> coreUrlRewrites) {
		this.coreUrlRewrites = coreUrlRewrites;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<TagRelation> getTagRelations() {
		return this.tagRelations;
	}

	public void setTagRelations(Set<TagRelation> tagRelations) {
		this.tagRelations = tagRelations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<ReportComparedProductIndex> getReportComparedProductIndexes() {
		return this.reportComparedProductIndexes;
	}

	public void setReportComparedProductIndexes(Set<ReportComparedProductIndex> reportComparedProductIndexes) {
		this.reportComparedProductIndexes = reportComparedProductIndexes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntityByLinkedProductId")
	public Set<CatalogProductLink> getCatalogProductLinksForLinkedProductId() {
		return this.catalogProductLinksForLinkedProductId;
	}

	public void setCatalogProductLinksForLinkedProductId(Set<CatalogProductLink> catalogProductLinksForLinkedProductId) {
		this.catalogProductLinksForLinkedProductId = catalogProductLinksForLinkedProductId;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "catalog_product_website", catalog = "magento", joinColumns = {
		@JoinColumn(name = "product_id", nullable = false, updatable = false)}, inverseJoinColumns = {
		@JoinColumn(name = "website_id", nullable = false, updatable = false)})
	public Set<Website> getCoreWebsites() {
		return this.coreWebsites;
	}

	public void setCoreWebsites(Set<Website> coreWebsites) {
		this.coreWebsites = coreWebsites;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<SalesBestsellersAggregatedMonthly> getSalesBestsellersAggregatedMonthlies() {
		return this.salesBestsellersAggregatedMonthlies;
	}

	public void setSalesBestsellersAggregatedMonthlies(Set<SalesBestsellersAggregatedMonthly> salesBestsellersAggregatedMonthlies) {
		this.salesBestsellersAggregatedMonthlies = salesBestsellersAggregatedMonthlies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<ProductAlertStock> getProductAlertStocks() {
		return this.productAlertStocks;
	}

	public void setProductAlertStocks(Set<ProductAlertStock> productAlertStocks) {
		this.productAlertStocks = productAlertStocks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<WeeeDiscount> getWeeeDiscounts() {
		return this.weeeDiscounts;
	}

	public void setWeeeDiscounts(Set<WeeeDiscount> weeeDiscounts) {
		this.weeeDiscounts = weeeDiscounts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntityByParentId")
	public Set<CatalogProductSuperLink> getCatalogProductSuperLinksForParentId() {
		return this.catalogProductSuperLinksForParentId;
	}

	public void setCatalogProductSuperLinksForParentId(Set<CatalogProductSuperLink> catalogProductSuperLinksForParentId) {
		this.catalogProductSuperLinksForParentId = catalogProductSuperLinksForParentId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogsearchResult> getCatalogsearchResults() {
		return this.catalogsearchResults;
	}

	public void setCatalogsearchResults(Set<CatalogsearchResult> catalogsearchResults) {
		this.catalogsearchResults = catalogsearchResults;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductEntityGallery> getCatalogProductEntityGalleries() {
		return this.catalogProductEntityGalleries;
	}

	public void setCatalogProductEntityGalleries(Set<CatalogProductEntityGallery> catalogProductEntityGalleries) {
		this.catalogProductEntityGalleries = catalogProductEntityGalleries;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogCategoryProductIndex> getCatalogCategoryProductIndexes() {
		return this.catalogCategoryProductIndexes;
	}

	public void setCatalogCategoryProductIndexes(Set<CatalogCategoryProductIndex> catalogCategoryProductIndexes) {
		this.catalogCategoryProductIndexes = catalogCategoryProductIndexes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductEntityInt> getCatalogProductEntityInts() {
		return this.catalogProductEntityInts;
	}

	public void setCatalogProductEntityInts(Set<CatalogProductEntityInt> catalogProductEntityInts) {
		this.catalogProductEntityInts = catalogProductEntityInts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductIndexEavDecimal> getCatalogProductIndexEavDecimals() {
		return this.catalogProductIndexEavDecimals;
	}

	public void setCatalogProductIndexEavDecimals(Set<CatalogProductIndexEavDecimal> catalogProductIndexEavDecimals) {
		this.catalogProductIndexEavDecimals = catalogProductIndexEavDecimals;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<ReportViewedProductIndex> getReportViewedProductIndexes() {
		return this.reportViewedProductIndexes;
	}

	public void setReportViewedProductIndexes(Set<ReportViewedProductIndex> reportViewedProductIndexes) {
		this.reportViewedProductIndexes = reportViewedProductIndexes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductEntityGroupPrice> getCatalogProductEntityGroupPrices() {
		return this.catalogProductEntityGroupPrices;
	}

	public void setCatalogProductEntityGroupPrices(Set<CatalogProductEntityGroupPrice> catalogProductEntityGroupPrices) {
		this.catalogProductEntityGroupPrices = catalogProductEntityGroupPrices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductEntityDatetime> getCatalogProductEntityDatetimes() {
		return this.catalogProductEntityDatetimes;
	}

	public void setCatalogProductEntityDatetimes(Set<CatalogProductEntityDatetime> catalogProductEntityDatetimes) {
		this.catalogProductEntityDatetimes = catalogProductEntityDatetimes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CataloginventoryStockItem> getCataloginventoryStockItems() {
		return this.cataloginventoryStockItems;
	}

	public void setCataloginventoryStockItems(Set<CataloginventoryStockItem> cataloginventoryStockItems) {
		this.cataloginventoryStockItems = cataloginventoryStockItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntityByProductId")
	public Set<CatalogProductSuperLink> getCatalogProductSuperLinksForProductId() {
		return this.catalogProductSuperLinksForProductId;
	}

	public void setCatalogProductSuperLinksForProductId(Set<CatalogProductSuperLink> catalogProductSuperLinksForProductId) {
		this.catalogProductSuperLinksForProductId = catalogProductSuperLinksForProductId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<SalesFlatQuoteItem> getSalesFlatQuoteItems() {
		return this.salesFlatQuoteItems;
	}

	public void setSalesFlatQuoteItems(Set<SalesFlatQuoteItem> salesFlatQuoteItems) {
		this.salesFlatQuoteItems = salesFlatQuoteItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductIndexEav> getCatalogProductIndexEavs() {
		return this.catalogProductIndexEavs;
	}

	public void setCatalogProductIndexEavs(Set<CatalogProductIndexEav> catalogProductIndexEavs) {
		this.catalogProductIndexEavs = catalogProductIndexEavs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<WishlistItem> getWishlistItems() {
		return this.wishlistItems;
	}

	public void setWishlistItems(Set<WishlistItem> wishlistItems) {
		this.wishlistItems = wishlistItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductEntityText> getCatalogProductEntityTexts() {
		return this.catalogProductEntityTexts;
	}

	public void setCatalogProductEntityTexts(Set<CatalogProductEntityText> catalogProductEntityTexts) {
		this.catalogProductEntityTexts = catalogProductEntityTexts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductEntityDecimal> getCatalogProductEntityDecimals() {
		return this.catalogProductEntityDecimals;
	}

	public void setCatalogProductEntityDecimals(Set<CatalogProductEntityDecimal> catalogProductEntityDecimals) {
		this.catalogProductEntityDecimals = catalogProductEntityDecimals;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogCompareItem> getCatalogCompareItems() {
		return this.catalogCompareItems;
	}

	public void setCatalogCompareItems(Set<CatalogCompareItem> catalogCompareItems) {
		this.catalogCompareItems = catalogCompareItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<SalesBestsellersAggregatedYearly> getSalesBestsellersAggregatedYearlies() {
		return this.salesBestsellersAggregatedYearlies;
	}

	public void setSalesBestsellersAggregatedYearlies(Set<SalesBestsellersAggregatedYearly> salesBestsellersAggregatedYearlies) {
		this.salesBestsellersAggregatedYearlies = salesBestsellersAggregatedYearlies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogruleProductPrice> getCatalogruleProductPrices() {
		return this.catalogruleProductPrices;
	}

	public void setCatalogruleProductPrices(Set<CatalogruleProductPrice> catalogruleProductPrices) {
		this.catalogruleProductPrices = catalogruleProductPrices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<ProductAlertPrice> getProductAlertPrices() {
		return this.productAlertPrices;
	}

	public void setProductAlertPrices(Set<ProductAlertPrice> productAlertPrices) {
		this.productAlertPrices = productAlertPrices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<ReportViewedProductAggregatedMonthly> getReportViewedProductAggregatedMonthlies() {
		return this.reportViewedProductAggregatedMonthlies;
	}

	public void setReportViewedProductAggregatedMonthlies(Set<ReportViewedProductAggregatedMonthly> reportViewedProductAggregatedMonthlies) {
		this.reportViewedProductAggregatedMonthlies = reportViewedProductAggregatedMonthlies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CataloginventoryStockStatus> getCataloginventoryStockStatuses() {
		return this.cataloginventoryStockStatuses;
	}

	public void setCataloginventoryStockStatuses(Set<CataloginventoryStockStatus> cataloginventoryStockStatuses) {
		this.cataloginventoryStockStatuses = cataloginventoryStockStatuses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductOption> getCatalogProductOptions() {
		return this.catalogProductOptions;
	}

	public void setCatalogProductOptions(Set<CatalogProductOption> catalogProductOptions) {
		this.catalogProductOptions = catalogProductOptions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<DownloadableLink> getDownloadableLinks() {
		return this.downloadableLinks;
	}

	public void setDownloadableLinks(Set<DownloadableLink> downloadableLinks) {
		this.downloadableLinks = downloadableLinks;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "catalog_product_relation", catalog = "magento", joinColumns = {
		@JoinColumn(name = "child_id", nullable = false, updatable = false)}, inverseJoinColumns = {
		@JoinColumn(name = "parent_id", nullable = false, updatable = false)})
	public Set<CatalogProductEntity> getCatalogProductEntitiesForParentId() {
		return this.catalogProductEntitiesForParentId;
	}

	public void setCatalogProductEntitiesForParentId(Set<CatalogProductEntity> catalogProductEntitiesForParentId) {
		this.catalogProductEntitiesForParentId = catalogProductEntitiesForParentId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<SalesBestsellersAggregatedDaily> getSalesBestsellersAggregatedDailies() {
		return this.salesBestsellersAggregatedDailies;
	}

	public void setSalesBestsellersAggregatedDailies(Set<SalesBestsellersAggregatedDaily> salesBestsellersAggregatedDailies) {
		this.salesBestsellersAggregatedDailies = salesBestsellersAggregatedDailies;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "catalog_product_relation", catalog = "magento", joinColumns = {
		@JoinColumn(name = "parent_id", nullable = false, updatable = false)}, inverseJoinColumns = {
		@JoinColumn(name = "child_id", nullable = false, updatable = false)})
	public Set<CatalogProductEntity> getCatalogProductEntitiesForChildId() {
		return this.catalogProductEntitiesForChildId;
	}

	public void setCatalogProductEntitiesForChildId(Set<CatalogProductEntity> catalogProductEntitiesForChildId) {
		this.catalogProductEntitiesForChildId = catalogProductEntitiesForChildId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductEntityMediaGallery> getCatalogProductEntityMediaGalleries() {
		return this.catalogProductEntityMediaGalleries;
	}

	public void setCatalogProductEntityMediaGalleries(Set<CatalogProductEntityMediaGallery> catalogProductEntityMediaGalleries) {
		this.catalogProductEntityMediaGalleries = catalogProductEntityMediaGalleries;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductBundleOption> getCatalogProductBundleOptions() {
		return this.catalogProductBundleOptions;
	}

	public void setCatalogProductBundleOptions(Set<CatalogProductBundleOption> catalogProductBundleOptions) {
		this.catalogProductBundleOptions = catalogProductBundleOptions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductEntityTierPrice> getCatalogProductEntityTierPrices() {
		return this.catalogProductEntityTierPrices;
	}

	public void setCatalogProductEntityTierPrices(Set<CatalogProductEntityTierPrice> catalogProductEntityTierPrices) {
		this.catalogProductEntityTierPrices = catalogProductEntityTierPrices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductSuperAttribute> getCatalogProductSuperAttributes() {
		return this.catalogProductSuperAttributes;
	}

	public void setCatalogProductSuperAttributes(Set<CatalogProductSuperAttribute> catalogProductSuperAttributes) {
		this.catalogProductSuperAttributes = catalogProductSuperAttributes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogCategoryProduct> getCatalogCategoryProducts() {
		return this.catalogCategoryProducts;
	}

	public void setCatalogCategoryProducts(Set<CatalogCategoryProduct> catalogCategoryProducts) {
		this.catalogCategoryProducts = catalogCategoryProducts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductEnabledIndex> getCatalogProductEnabledIndexes() {
		return this.catalogProductEnabledIndexes;
	}

	public void setCatalogProductEnabledIndexes(Set<CatalogProductEnabledIndex> catalogProductEnabledIndexes) {
		this.catalogProductEnabledIndexes = catalogProductEnabledIndexes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<WeeeTax> getWeeeTaxes() {
		return this.weeeTaxes;
	}

	public void setWeeeTaxes(Set<WeeeTax> weeeTaxes) {
		this.weeeTaxes = weeeTaxes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductIndexPrice> getCatalogProductIndexPrices() {
		return this.catalogProductIndexPrices;
	}

	public void setCatalogProductIndexPrices(Set<CatalogProductIndexPrice> catalogProductIndexPrices) {
		this.catalogProductIndexPrices = catalogProductIndexPrices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<ReportViewedProductAggregatedYearly> getReportViewedProductAggregatedYearlies() {
		return this.reportViewedProductAggregatedYearlies;
	}

	public void setReportViewedProductAggregatedYearlies(Set<ReportViewedProductAggregatedYearly> reportViewedProductAggregatedYearlies) {
		this.reportViewedProductAggregatedYearlies = reportViewedProductAggregatedYearlies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntityByProductId")
	public Set<CatalogProductLink> getCatalogProductLinksForProductId() {
		return this.catalogProductLinksForProductId;
	}

	public void setCatalogProductLinksForProductId(Set<CatalogProductLink> catalogProductLinksForProductId) {
		this.catalogProductLinksForProductId = catalogProductLinksForProductId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductIndexGroupPrice> getCatalogProductIndexGroupPrices() {
		return this.catalogProductIndexGroupPrices;
	}

	public void setCatalogProductIndexGroupPrices(Set<CatalogProductIndexGroupPrice> catalogProductIndexGroupPrices) {
		this.catalogProductIndexGroupPrices = catalogProductIndexGroupPrices;
	}

}
