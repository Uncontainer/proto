package com.naver.mage4j.core.mage.core.model.resource.model;

// Generated 2014. 7. 17 ���� 12:15:45 by Hibernate Tools 4.0.0

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import com.naver.mage4j.core.mage.core.model.resource.store.Store;

/**
 * CatalogProductEntityMediaGalleryValue generated by hbm2java
 */
@Entity
@Table(name = "catalog_product_entity_media_gallery_value"
	, catalog = "magento")
public class CatalogProductEntityMediaGalleryValue implements java.io.Serializable {

	private CatalogProductEntityMediaGalleryValueId id;
	private CatalogProductEntityMediaGallery catalogProductEntityMediaGallery;
	private Store coreStore;
	private String label;
	private Integer position;
	private short disabled;

	public CatalogProductEntityMediaGalleryValue() {
	}

	public CatalogProductEntityMediaGalleryValue(CatalogProductEntityMediaGalleryValueId id, CatalogProductEntityMediaGallery catalogProductEntityMediaGallery, Store coreStore, short disabled) {
		this.id = id;
		this.catalogProductEntityMediaGallery = catalogProductEntityMediaGallery;
		this.coreStore = coreStore;
		this.disabled = disabled;
	}

	public CatalogProductEntityMediaGalleryValue(CatalogProductEntityMediaGalleryValueId id, CatalogProductEntityMediaGallery catalogProductEntityMediaGallery, Store coreStore, String label, Integer position, short disabled) {
		this.id = id;
		this.catalogProductEntityMediaGallery = catalogProductEntityMediaGallery;
		this.coreStore = coreStore;
		this.label = label;
		this.position = position;
		this.disabled = disabled;
	}

	@EmbeddedId
	@AttributeOverrides({
		@AttributeOverride(name = "valueId", column = @Column(name = "value_id", nullable = false)),
		@AttributeOverride(name = "storeId", column = @Column(name = "store_id", nullable = false))})
	public CatalogProductEntityMediaGalleryValueId getId() {
		return this.id;
	}

	public void setId(CatalogProductEntityMediaGalleryValueId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "value_id", nullable = false, insertable = false, updatable = false)
	public CatalogProductEntityMediaGallery getCatalogProductEntityMediaGallery() {
		return this.catalogProductEntityMediaGallery;
	}

	public void setCatalogProductEntityMediaGallery(CatalogProductEntityMediaGallery catalogProductEntityMediaGallery) {
		this.catalogProductEntityMediaGallery = catalogProductEntityMediaGallery;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "store_id", nullable = false, insertable = false, updatable = false)
	public Store getCoreStore() {
		return this.coreStore;
	}

	public void setCoreStore(Store coreStore) {
		this.coreStore = coreStore;
	}

	@Column(name = "label")
	public String getLabel() {
		return this.label;
	}

	public void setLabel(String label) {
		this.label = label;
	}

	@Column(name = "position")
	public Integer getPosition() {
		return this.position;
	}

	public void setPosition(Integer position) {
		this.position = position;
	}

	@Column(name = "disabled", nullable = false)
	public short getDisabled() {
		return this.disabled;
	}

	public void setDisabled(short disabled) {
		this.disabled = disabled;
	}

}
